name: Deploy Offline Version

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with: 
        fetch-depth: 0

    - name: Configure offline mode
      run: |
        sed -i 's/"homepage": "\/"/"homepage": ".\/"/g' package.json

    - name: Install dependencies
      run: npm ci

    - name: Build
      env:
        CI: true
        REACT_APP_OFFLINE_MODE: true
      run: npm run build

    - name: Zip
      run: |
        mkdir deploy
        zip -r deploy/$(node -pe "require('./package.json')['version']").zip build
    
    - name: Setup Vars
      id: vars
      run: |
        VERSION_NUMBER=$(node -pe "require('./package.json')['version']") 
        echo ::set-output name=release_tag::v$VERSION_NUMBER
        echo ::set-output name=release_name::Arithmico v$VERSION_NUMBER
        echo ::set-output name=release_text::"Download offline version [here](https://blob.behrenle.io/arithmico-calculator/$(echo $VERSION_NUMBER).zip)"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ steps.vars.outputs.release_tag }}
        release_name: ${{ steps.vars.outputs.release_name }}
        body: ${{ steps.vars.outputs.release_text }}
        draft: false
        prerelease: false

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - name: Deploy static site to S3 bucket
      env: 
        BUCKET_ID: ${{ secrets.BLOB_BUCKET_ID }}
      run: aws s3 sync ./deploy/ s3://$BUCKET_ID/arithmico-calculator/

    - name: Invalidate Cloundfront distrubution
      env:
        DISTRIBUTION_ID: ${{ secrets.BLOB_DISTRIBUTION_ID }}
      run: aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths '/*'

