{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _ = _interopRequireDefault(require(\"..\"));\n\nvar _Equals = _interopRequireDefault(require(\"../../create/Equals\"));\n\nvar _Minus = _interopRequireDefault(require(\"../../create/Minus\"));\n\nvar _NumberNode = _interopRequireDefault(require(\"../../create/NumberNode\"));\n\nvar _normalizeUtils = require(\"../../utils/normalize-utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar normalizeChildren = function normalizeChildren(node, context) {\n  if (node.type !== 'equals') {\n    return;\n  }\n\n  return (0, _Equals[\"default\"])((0, _[\"default\"])(node.left, context), (0, _[\"default\"])(node.right, context));\n};\n\nvar moveEverythingLeft = function moveEverythingLeft(node, context) {\n  if (node.type !== 'equals' || node.right.type === 'number' && node.right.value === 0) {\n    return;\n  }\n\n  return (0, _Equals[\"default\"])((0, _[\"default\"])((0, _Minus[\"default\"])(node.left, node.right), context), (0, _NumberNode[\"default\"])(0));\n};\n\nvar normalizeEquals = (0, _normalizeUtils.combineNormalizers)([normalizeChildren, moveEverythingLeft]);\nvar _default = normalizeEquals;\nexports[\"default\"] = _default;","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,iBAAoC,GAAG,SAAvCA,iBAAuC,CAACC,IAAD,EAAOC,OAAP,EAAmB;EAC5D,IAAID,IAAI,CAACE,IAALF,KAAc,QAAlB,EAA4B;IACxB;EACH;;EAED,OAAO,wBAAa,kBAAUA,IAAI,CAACG,IAAf,EAAqBF,OAArB,CAAb,EAA4C,kBAAUD,IAAI,CAACI,KAAf,EAAsBH,OAAtB,CAA5C,CAAP;AALJ;;AAQA,IAAMI,kBAAqC,GAAG,SAAxCA,kBAAwC,CAACL,IAAD,EAAOC,OAAP,EAAmB;EAC7D,IAAID,IAAI,CAACE,IAALF,KAAc,QAAdA,IAA2BA,IAAI,CAACI,KAALJ,CAAWE,IAAXF,KAAoB,QAApBA,IAAgCA,IAAI,CAACI,KAALJ,CAAWM,KAAXN,KAAqB,CAApF,EAAwF;IACpF;EACH;;EAED,OAAO,wBAAa,kBAAU,uBAAYA,IAAI,CAACG,IAAjB,EAAuBH,IAAI,CAACI,KAA5B,CAAV,EAA8CH,OAA9C,CAAb,EAAqE,4BAAiB,CAAjB,CAArE,CAAP;AALJ;;AAQA,IAAMM,eAAe,GAAG,wCAAmB,CAACR,iBAAD,EAAoBM,kBAApB,CAAnB,CAAxB;eAEeE","names":["normalizeChildren","node","context","type","left","right","moveEverythingLeft","value","normalizeEquals"],"sources":["/home/behrenle/Projects/private/arithmico-calculator/node_modules/@behrenle/number-cruncher/src/normalize/nodes/normalize-equals.ts"],"sourcesContent":["import normalize from '..';\nimport createEquals from '../../create/Equals';\nimport createMinus from '../../create/Minus';\nimport createNumberNode from '../../create/NumberNode';\nimport { combineNormalizers, PartialNormalizer } from '../../utils/normalize-utils';\n\nconst normalizeChildren: PartialNormalizer = (node, context) => {\n    if (node.type !== 'equals') {\n        return;\n    }\n\n    return createEquals(normalize(node.left, context), normalize(node.right, context));\n};\n\nconst moveEverythingLeft: PartialNormalizer = (node, context) => {\n    if (node.type !== 'equals' || (node.right.type === 'number' && node.right.value === 0)) {\n        return;\n    }\n\n    return createEquals(normalize(createMinus(node.left, node.right), context), createNumberNode(0));\n};\n\nconst normalizeEquals = combineNormalizers([normalizeChildren, moveEverythingLeft]);\n\nexport default normalizeEquals;\n"]},"metadata":{},"sourceType":"script"}