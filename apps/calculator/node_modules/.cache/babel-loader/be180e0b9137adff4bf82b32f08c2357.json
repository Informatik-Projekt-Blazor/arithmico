{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.binco = binco;\n\nfunction binco(n, k) {\n  var result = 1;\n\n  if (n < k) {\n    throw 'invalid input: n < k';\n  }\n\n  while (k > 0) {\n    result = result * (n / k);\n    n--;\n    k--;\n  }\n\n  return Math.round(result);\n}","map":{"version":3,"mappings":";;;;;;;AAAO,SAASA,KAAT,CAAeC,CAAf,EAA0BC,CAA1B,EAA6C;EAChD,IAAIC,MAAM,GAAG,CAAb;;EACA,IAAIF,CAAC,GAAGC,CAAR,EAAW;IACP,MAAM,sBAAN;EACH;;EACD,OAAOA,CAAC,GAAG,CAAX,EAAc;IACVC,MAAM,GAAGA,MAAM,IAAIF,CAAC,GAAGC,CAAR,CAAfC;IACAF,CAAC;IACDC,CAAC;EACJ;;EACD,OAAOE,IAAI,CAACC,KAALD,CAAWD,MAAXC,CAAP;AACH","names":["binco","n","k","result","Math","round"],"sources":["/home/behrenle/Projects/private/arithmico-calculator/node_modules/@behrenle/number-cruncher/src/utils/binco.ts"],"sourcesContent":["export function binco(n: number, k: number): number {\n    let result = 1;\n    if (n < k) {\n        throw 'invalid input: n < k';\n    }\n    while (k > 0) {\n        result = result * (n / k);\n        n--;\n        k--;\n    }\n    return Math.round(result);\n}\n"]},"metadata":{},"sourceType":"script"}