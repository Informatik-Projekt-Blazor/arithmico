{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _FunctionCall = _interopRequireDefault(require(\"../../../create/FunctionCall\"));\n\nvar _NumberNode = _interopRequireDefault(require(\"../../../create/NumberNode\"));\n\nvar _eval = _interopRequireDefault(require(\"../../../eval\"));\n\nvar _binco = require(\"../../../utils/binco\");\n\nvar _parameterUtils = require(\"../../../utils/parameter-utils\");\n\nvar _pluginBuilder = require(\"../../../utils/plugin-builder\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar H_COEFFICIENT = 1e-6;\nvar nderivePlugin = (0, _pluginBuilder.createPlugin)('nderive');\n(0, _pluginBuilder.addPluginAuthor)(nderivePlugin, 'core');\n(0, _pluginBuilder.addPluginDescription)(nderivePlugin, 'adds nderive function');\nvar nderiveHeader = [{\n  type: 'function',\n  name: 'f',\n  evaluate: true\n}, {\n  type: 'number',\n  name: 'position',\n  evaluate: true\n}, {\n  type: 'number',\n  name: 'grade',\n  evaluate: true,\n  optional: true\n}];\n(0, _pluginBuilder.addPluginFunction)(nderivePlugin, (0, _pluginBuilder.createPluginFunction)('nderive', nderiveHeader, 'Calculates the derivative of the function for the given position.', 'Berechnet den Wert der Ableitungsfunktion an der gegebenen Position.', function (parameters, context) {\n  var parameterStackFrame = (0, _parameterUtils.mapParametersToStackFrame)('nintegrate', parameters, nderiveHeader, context);\n  var f = parameterStackFrame['f'];\n  var position = parameterStackFrame['position'].value;\n  var rawGrade = parameterStackFrame['grade'];\n  var grade = !rawGrade || rawGrade.type !== 'number' ? 1 : rawGrade.value;\n\n  if (grade < 1 || grade % 1 !== 0) {\n    throw 'RuntimeError: nderive: invalid grade';\n  }\n\n  if (f.header.length !== 1 || f.header[0].type !== 'number' && f.header[0].type !== 'any') {\n    throw 'RuntimeError: nderive: invalid function signature';\n  }\n\n  var value = (0, _NumberNode[\"default\"])(position);\n  var expression = (0, _FunctionCall[\"default\"])(f, [value]);\n  (0, _eval[\"default\"])(expression, context);\n  var h = Math.abs(position >= 1 ? position : 1) * H_COEFFICIENT;\n  var result = 0;\n  var cOuter = Math.pow(2 * h, -grade);\n\n  for (var i = 0; i <= grade; i++) {\n    var cInner = Math.pow(-1, i) * (0, _binco.binco)(grade, i);\n    value.value = position + (grade - 2 * i) * h;\n    var y = (0, _eval[\"default\"])(expression, context);\n\n    if (y.type !== 'number') {\n      throw 'RuntimeError: nderive: cannot derive not scalar function';\n    }\n\n    result += y.value * cInner * cOuter;\n  }\n\n  return (0, _NumberNode[\"default\"])(result);\n}));\nvar _default = nderivePlugin;\nexports[\"default\"] = _default;","map":{"version":3,"mappings":"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","names":["H_COEFFICIENT","nderivePlugin","nderiveHeader","type","name","evaluate","optional","parameters","context","parameterStackFrame","f","position","value","rawGrade","grade","header","length","expression","h","Math","abs","result","cOuter","pow","i","cInner","y"],"sources":["/home/behrenle/Projects/private/arithmico-calculator/node_modules/@behrenle/number-cruncher/src/plugins/core/nderive/nderive.ts"],"sourcesContent":["import createFunctionCall from '../../../create/FunctionCall';\nimport createNumberNode from '../../../create/NumberNode';\nimport evaluate from '../../../eval';\nimport { FunctionHeaderItem, FunctionNode, NumberNode } from '../../../types/SyntaxTreeNodes';\nimport { binco } from '../../../utils/binco';\nimport { mapParametersToStackFrame } from '../../../utils/parameter-utils';\nimport {\n    addPluginAuthor,\n    addPluginDescription,\n    addPluginFunction,\n    createPlugin,\n    createPluginFunction,\n} from '../../../utils/plugin-builder';\n\nconst H_COEFFICIENT = 1e-6;\n\nconst nderivePlugin = createPlugin('nderive');\n\naddPluginAuthor(nderivePlugin, 'core');\naddPluginDescription(nderivePlugin, 'adds nderive function');\n\nconst nderiveHeader: FunctionHeaderItem[] = [\n    { type: 'function', name: 'f', evaluate: true },\n    { type: 'number', name: 'position', evaluate: true },\n    { type: 'number', name: 'grade', evaluate: true, optional: true },\n];\n\naddPluginFunction(\n    nderivePlugin,\n    createPluginFunction(\n        'nderive',\n        nderiveHeader,\n        'Calculates the derivative of the function for the given position.',\n        'Berechnet den Wert der Ableitungsfunktion an der gegebenen Position.',\n        (parameters, context) => {\n            const parameterStackFrame = mapParametersToStackFrame('nintegrate', parameters, nderiveHeader, context);\n            const f = <FunctionNode>parameterStackFrame['f'];\n            const position = (<NumberNode>parameterStackFrame['position']).value;\n            const rawGrade = parameterStackFrame['grade'];\n            const grade = !rawGrade || rawGrade.type !== 'number' ? 1 : rawGrade.value;\n\n            if (grade < 1 || grade % 1 !== 0) {\n                throw 'RuntimeError: nderive: invalid grade';\n            }\n\n            if (f.header.length !== 1 || (f.header[0].type !== 'number' && f.header[0].type !== 'any')) {\n                throw 'RuntimeError: nderive: invalid function signature';\n            }\n\n            const value = createNumberNode(position);\n            const expression = createFunctionCall(f, [value]);\n            evaluate(expression, context);\n            const h = Math.abs(position >= 1 ? position : 1) * H_COEFFICIENT;\n\n            let result = 0;\n\n            const cOuter = Math.pow(2 * h, -grade);\n\n            for (let i = 0; i <= grade; i++) {\n                const cInner = Math.pow(-1, i) * binco(grade, i);\n\n                value.value = position + (grade - 2 * i) * h;\n                const y = evaluate(expression, context);\n\n                if (y.type !== 'number') {\n                    throw 'RuntimeError: nderive: cannot derive not scalar function';\n                }\n\n                result += y.value * cInner * cOuter;\n            }\n\n            return createNumberNode(result);\n        },\n    ),\n);\n\nexport default nderivePlugin;\n"]},"metadata":{},"sourceType":"script"}