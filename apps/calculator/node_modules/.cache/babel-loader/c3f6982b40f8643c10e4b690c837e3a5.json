{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _FunctionCall = _interopRequireDefault(require(\"../../../create/FunctionCall\"));\n\nvar _NumberNode = _interopRequireDefault(require(\"../../../create/NumberNode\"));\n\nvar _SymbolNode = _interopRequireDefault(require(\"../../../create/SymbolNode\"));\n\nvar _floatUtils = require(\"../../../utils/float-utils\");\n\nvar _parameterUtils = require(\"../../../utils/parameter-utils\");\n\nvar _pluginBuilder = require(\"../../../utils/plugin-builder\");\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar INTERVALLS = 128;\nvar nintegratePlugin = (0, _pluginBuilder.createPlugin)('nintegrate');\n(0, _pluginBuilder.addPluginAuthor)(nintegratePlugin, 'core');\n(0, _pluginBuilder.addPluginDescription)(nintegratePlugin, 'adds nintegral function');\nvar nintegrateHeader = [{\n  type: 'function',\n  name: 'f',\n  evaluate: true\n}, {\n  type: 'number',\n  name: 'start',\n  evaluate: true\n}, {\n  type: 'number',\n  name: 'stop',\n  evaluate: true\n}];\n(0, _pluginBuilder.addPluginFunction)(nintegratePlugin, {\n  name: 'nintegrate',\n  documentation: {\n    en: {\n      synopsis: 'nintegrate(f, u, v)',\n      description: 'Calculates the definite integral of the function for the given limits.'\n    },\n    de: {\n      synopsis: 'nintegrate(f, u, v)',\n      description: 'Berechnet das bestimmte Integral von f zwischen u und v.'\n    }\n  },\n  \"function\": {\n    type: 'function',\n    header: nintegrateHeader,\n    expression: (0, _FunctionCall[\"default\"])((0, _SymbolNode[\"default\"])('nintegrate'), [(0, _SymbolNode[\"default\"])('f'), (0, _SymbolNode[\"default\"])('start'), (0, _SymbolNode[\"default\"])('stop')]),\n    evaluator: function evaluator(parameters, context) {\n      var parameterStackFrame = (0, _parameterUtils.mapParametersToStackFrame)('nintegrate', parameters, nintegrateHeader, context);\n      var f = parameterStackFrame['f'];\n      var start = parameterStackFrame['start'];\n      var stop = parameterStackFrame['stop'];\n\n      if (f.header.length !== 1 || f.header[0].type !== 'number' && f.header[0].type !== 'any') {\n        throw 'RuntimeError: nintegrate: invalid function header';\n      }\n\n      var value = (0, _NumberNode[\"default\"])(0);\n      var expression = (0, _FunctionCall[\"default\"])(f, [value]);\n      var intervallIntegrals = [];\n      var leftLimit = Math.min(start.value, stop.value);\n      var rightLimit = Math.max(start.value, stop.value);\n      var intervallWidth = (rightLimit - leftLimit) / INTERVALLS;\n\n      for (var i = 0; i < INTERVALLS; i++) {\n        intervallIntegrals.push((0, _utils.integrateIntervall)(intervallWidth * i + leftLimit, intervallWidth * (i + 1) + leftLimit, expression, value, context));\n      }\n\n      var result = intervallIntegrals.reduce(function (a, b) {\n        return a + b;\n      });\n\n      if ((0, _floatUtils.closeTo)(result, 0)) {\n        return (0, _NumberNode[\"default\"])(0);\n      }\n\n      return (0, _NumberNode[\"default\"])(result);\n    }\n  }\n});\nvar _default = nintegratePlugin;\nexports[\"default\"] = _default;","map":{"version":3,"mappings":"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","names":["INTERVALLS","nintegratePlugin","nintegrateHeader","type","name","evaluate","documentation","en","synopsis","description","de","header","expression","evaluator","parameters","context","parameterStackFrame","f","start","stop","length","value","intervallIntegrals","leftLimit","Math","min","rightLimit","max","intervallWidth","i","push","result","reduce","a","b"],"sources":["/home/behrenle/Projects/private/arithmico-calculator/node_modules/@behrenle/number-cruncher/src/plugins/core/nintegrate/nintegrate.ts"],"sourcesContent":["import createFunctionCall from '../../../create/FunctionCall';\nimport createNumberNode from '../../../create/NumberNode';\nimport createSymbolNode from '../../../create/SymbolNode';\nimport { FunctionHeaderItem, FunctionNode, NumberNode } from '../../../types/SyntaxTreeNodes';\nimport { closeTo } from '../../../utils/float-utils';\nimport { mapParametersToStackFrame } from '../../../utils/parameter-utils';\nimport { addPluginAuthor, addPluginDescription, addPluginFunction, createPlugin } from '../../../utils/plugin-builder';\nimport { integrateIntervall } from './utils';\n\nconst INTERVALLS = 128;\nconst nintegratePlugin = createPlugin('nintegrate');\n\naddPluginAuthor(nintegratePlugin, 'core');\naddPluginDescription(nintegratePlugin, 'adds nintegral function');\n\nconst nintegrateHeader: FunctionHeaderItem[] = [\n    { type: 'function', name: 'f', evaluate: true },\n    { type: 'number', name: 'start', evaluate: true },\n    { type: 'number', name: 'stop', evaluate: true },\n];\n\naddPluginFunction(nintegratePlugin, {\n    name: 'nintegrate',\n    documentation: {\n        en: {\n            synopsis: 'nintegrate(f, u, v)',\n            description: 'Calculates the definite integral of the function for the given limits.',\n        },\n        de: {\n            synopsis: 'nintegrate(f, u, v)',\n            description: 'Berechnet das bestimmte Integral von f zwischen u und v.',\n        },\n    },\n    function: {\n        type: 'function',\n        header: nintegrateHeader,\n        expression: createFunctionCall(createSymbolNode('nintegrate'), [\n            createSymbolNode('f'),\n            createSymbolNode('start'),\n            createSymbolNode('stop'),\n        ]),\n        evaluator: (parameters, context) => {\n            const parameterStackFrame = mapParametersToStackFrame('nintegrate', parameters, nintegrateHeader, context);\n            const f = <FunctionNode>parameterStackFrame['f'];\n            const start = <NumberNode>parameterStackFrame['start'];\n            const stop = <NumberNode>parameterStackFrame['stop'];\n\n            if (f.header.length !== 1 || (f.header[0].type !== 'number' && f.header[0].type !== 'any')) {\n                throw 'RuntimeError: nintegrate: invalid function header';\n            }\n\n            const value = createNumberNode(0);\n            const expression = createFunctionCall(f, [value]);\n            const intervallIntegrals: number[] = [];\n            const leftLimit = Math.min(start.value, stop.value);\n            const rightLimit = Math.max(start.value, stop.value);\n            const intervallWidth = (rightLimit - leftLimit) / INTERVALLS;\n\n            for (let i = 0; i < INTERVALLS; i++) {\n                intervallIntegrals.push(\n                    integrateIntervall(\n                        intervallWidth * i + leftLimit,\n                        intervallWidth * (i + 1) + leftLimit,\n                        expression,\n                        value,\n                        context,\n                    ),\n                );\n            }\n\n            const result = intervallIntegrals.reduce((a, b) => a + b);\n\n            if (closeTo(result, 0)) {\n                return createNumberNode(0);\n            }\n\n            return createNumberNode(result);\n        },\n    },\n});\n\nexport default nintegratePlugin;\n"]},"metadata":{},"sourceType":"script"}