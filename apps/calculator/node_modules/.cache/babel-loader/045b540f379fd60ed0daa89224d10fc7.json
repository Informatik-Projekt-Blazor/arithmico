{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateErf = calculateErf;\n\nfunction calculateT(x) {\n  return 1 / (1 + 0.5 * Math.abs(x));\n}\n\nfunction calculateTau(x) {\n  var t = calculateT(x);\n  return t * Math.exp(-Math.pow(x, 2) - 1.26551223 + 1.00002368 * t + 0.37409196 * Math.pow(t, 2) + 0.09678418 * Math.pow(t, 3) - 0.18628806 * Math.pow(t, 4) + 0.27886807 * Math.pow(t, 5) - 1.13520398 * Math.pow(t, 6) + 1.48851587 * Math.pow(t, 7) - 0.82215223 * Math.pow(t, 8) + 0.17087277 * Math.pow(t, 9));\n}\n\nfunction calculateErf(x) {\n  if (x >= 0) {\n    return 1 - calculateTau(x);\n  }\n\n  return calculateTau(-x) - 1;\n}","map":{"version":3,"mappings":";;;;;;;AAAA,SAASA,UAAT,CAAoBC,CAApB,EAAuC;EACnC,OAAO,KAAK,IAAI,MAAMC,IAAI,CAACC,GAALD,CAASD,CAATC,CAAf,CAAP;AACH;;AAED,SAASE,YAAT,CAAsBH,CAAtB,EAAyC;EACrC,IAAMI,CAAC,GAAGL,UAAU,CAACC,CAAD,CAApB;EACA,OACII,CAAC,GACDH,IAAI,CAACI,GAALJ,CACI,CAACA,IAAI,CAACK,GAALL,CAASD,CAATC,EAAY,CAAZA,CAAD,GACI,UADJ,GAEI,aAAaG,CAFjB,GAGI,aAAaH,IAAI,CAACK,GAALL,CAASG,CAATH,EAAY,CAAZA,CAHjB,GAII,aAAaA,IAAI,CAACK,GAALL,CAASG,CAATH,EAAY,CAAZA,CAJjB,GAKI,aAAaA,IAAI,CAACK,GAALL,CAASG,CAATH,EAAY,CAAZA,CALjB,GAMI,aAAaA,IAAI,CAACK,GAALL,CAASG,CAATH,EAAY,CAAZA,CANjB,GAOI,aAAaA,IAAI,CAACK,GAALL,CAASG,CAATH,EAAY,CAAZA,CAPjB,GAQI,aAAaA,IAAI,CAACK,GAALL,CAASG,CAATH,EAAY,CAAZA,CARjB,GASI,aAAaA,IAAI,CAACK,GAALL,CAASG,CAATH,EAAY,CAAZA,CATjB,GAUI,aAAaA,IAAI,CAACK,GAALL,CAASG,CAATH,EAAY,CAAZA,CAXrBA,CAFJ;AAgBH;;AAEM,SAASM,YAAT,CAAsBP,CAAtB,EAAyC;EAC5C,IAAIA,CAAC,IAAI,CAAT,EAAY;IACR,OAAO,IAAIG,YAAY,CAACH,CAAD,CAAvB;EACH;;EACD,OAAOG,YAAY,CAAC,CAACH,CAAF,CAAZG,GAAmB,CAA1B;AACH","names":["calculateT","x","Math","abs","calculateTau","t","exp","pow","calculateErf"],"sources":["/home/behrenle/Projects/private/arithmico-calculator/node_modules/@behrenle/number-cruncher/src/plugins/core/statistics/utils/erf.ts"],"sourcesContent":["function calculateT(x: number): number {\n    return 1 / (1 + 0.5 * Math.abs(x));\n}\n\nfunction calculateTau(x: number): number {\n    const t = calculateT(x);\n    return (\n        t *\n        Math.exp(\n            -Math.pow(x, 2) -\n                1.26551223 +\n                1.00002368 * t +\n                0.37409196 * Math.pow(t, 2) +\n                0.09678418 * Math.pow(t, 3) -\n                0.18628806 * Math.pow(t, 4) +\n                0.27886807 * Math.pow(t, 5) -\n                1.13520398 * Math.pow(t, 6) +\n                1.48851587 * Math.pow(t, 7) -\n                0.82215223 * Math.pow(t, 8) +\n                0.17087277 * Math.pow(t, 9),\n        )\n    );\n}\n\nexport function calculateErf(x: number): number {\n    if (x >= 0) {\n        return 1 - calculateTau(x);\n    }\n    return calculateTau(-x) - 1;\n}\n"]},"metadata":{},"sourceType":"script"}