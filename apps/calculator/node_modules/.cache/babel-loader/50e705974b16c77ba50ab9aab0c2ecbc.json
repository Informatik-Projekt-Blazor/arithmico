{"ast":null,"code":"\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.serializeHeaderItem = serializeHeaderItem;\nexports[\"default\"] = serializeFunction;\n\nvar _ = _interopRequireWildcard(require(\"..\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction serializeHeaderItem(item) {\n  var suffix = function (optional, repeat) {\n    if (optional && repeat) return '*';\n    if (!optional && repeat) return '+';\n    if (optional && !repeat) return '?';\n    if (!optional && !repeat) return '';\n  }(item.optional, item.repeat);\n\n  return \"\".concat(item.name, \": \").concat(item.type).concat(suffix);\n}\n\nfunction serializeFunction(node, options) {\n  var serializedChild = (0, _.needsBrackets)(node.type, node.expression.type, true) ? \"\".concat((0, _[\"default\"])(node.expression, options)) : (0, _[\"default\"])(node.expression, options);\n  return \"(\".concat(node.header.map(serializeHeaderItem).join(', '), \") \\u2192 \").concat(serializedChild);\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIO,SAASA,mBAAT,CAA6BC,IAA7B,EAAuD;EAC1D,IAAMC,MAAM,GAAI,UAACC,QAAD,EAAoBC,MAApB,EAAwC;IACpD,IAAID,QAAQ,IAAIC,MAAhB,EAAwB,OAAO,GAAP;IACxB,IAAI,CAACD,QAAD,IAAaC,MAAjB,EAAyB,OAAO,GAAP;IACzB,IAAID,QAAQ,IAAI,CAACC,MAAjB,EAAyB,OAAO,GAAP;IACzB,IAAI,CAACD,QAAD,IAAa,CAACC,MAAlB,EAA0B,OAAO,EAAP;EAJf,CAAC,CAKbH,IAAI,CAACE,QALQ,EAKEF,IAAI,CAACG,MALP,CAAhB;;EAOA,iBAAUH,IAAI,CAACI,IAAf,eAAwBJ,IAAI,CAACK,IAA7B,SAAoCJ,MAApC;AACH;;AAEc,SAASK,iBAAT,CAA2BC,IAA3B,EAA+CC,OAA/C,EAAiE;EAC5E,IAAMC,eAAe,GAAG,qBAAcF,IAAI,CAACF,IAAnB,EAAyBE,IAAI,CAACG,UAALH,CAAgBF,IAAzC,EAA+C,IAA/C,cACf,kBAAUE,IAAI,CAACG,UAAf,EAA2BF,OAA3B,CADe,IAElB,kBAAUD,IAAI,CAACG,UAAf,EAA2BF,OAA3B,CAFN;EAIA,kBAAWD,IAAI,CAACI,MAALJ,CAAYK,GAAZL,CAAgBR,mBAAhBQ,EAAqCM,IAArCN,CAA0C,IAA1CA,CAAX,sBAAiEE,eAAjE;AACH","names":["serializeHeaderItem","item","suffix","optional","repeat","name","type","serializeFunction","node","options","serializedChild","expression","header","map","join"],"sources":["/home/behrenle/Projects/private/arithmico-calculator/node_modules/@behrenle/number-cruncher/src/serialize/nodes/Function.ts"],"sourcesContent":["import { Options } from './../../types/Context';\nimport serialize, { needsBrackets } from '..';\nimport { FunctionNode } from '../../types';\nimport { FunctionHeaderItem } from '../../types/SyntaxTreeNodes';\n\nexport function serializeHeaderItem(item: FunctionHeaderItem) {\n    const suffix = ((optional: boolean, repeat: boolean) => {\n        if (optional && repeat) return '*';\n        if (!optional && repeat) return '+';\n        if (optional && !repeat) return '?';\n        if (!optional && !repeat) return '';\n    })(item.optional, item.repeat);\n\n    return `${item.name}: ${item.type}${suffix}`;\n}\n\nexport default function serializeFunction(node: FunctionNode, options: Options) {\n    const serializedChild = needsBrackets(node.type, node.expression.type, true)\n        ? `${serialize(node.expression, options)}`\n        : serialize(node.expression, options);\n\n    return `(${node.header.map(serializeHeaderItem).join(', ')}) â†’ ${serializedChild}`;\n}\n"]},"metadata":{},"sourceType":"script"}