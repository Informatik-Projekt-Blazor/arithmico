{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _pluginBuilder = require(\"../../../utils/plugin-builder\");\n\nvar _parameterUtils = require(\"../../../utils/parameter-utils\");\n\nvar _vectorUtils = require(\"../../../utils/vector-utils\");\n\nvar _eval = _interopRequireDefault(require(\"../../../eval\"));\n\nvar _Vector = _interopRequireDefault(require(\"../../../create/Vector\"));\n\nvar _Minus = _interopRequireDefault(require(\"../../../create/Minus\"));\n\nvar _Times = _interopRequireDefault(require(\"../../../create/Times\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar header = [{\n  name: 'a',\n  type: 'vector',\n  evaluate: true\n}, {\n  name: 'b',\n  type: 'vector',\n  evaluate: true\n}];\nvar crossPlugin = (0, _pluginBuilder.createPlugin)('cross');\n(0, _pluginBuilder.addPluginAuthor)(crossPlugin, 'core');\n(0, _pluginBuilder.addPluginDescription)(crossPlugin, 'adds cross function');\n(0, _pluginBuilder.addPluginFunction)(crossPlugin, (0, _pluginBuilder.createPluginFunction)('cross', header, 'Calculate the vector product of a and b', 'Berechnet das Kreuzprodukt der Vektoren a und b.', function (parameters, context) {\n  var parameterStackFrame = (0, _parameterUtils.mapParametersToStackFrame)('cross', parameters, header, context);\n  var left = parameterStackFrame['a'];\n  var right = parameterStackFrame['b'];\n\n  try {\n    var leftRank = (0, _vectorUtils.getVectorRank)(left);\n    var rightRank = (0, _vectorUtils.getVectorRank)(right);\n\n    if (leftRank !== 1 || rightRank !== 1) {\n      throw '';\n    }\n\n    if (left.values.length !== 3 || right.values.length !== 3) {\n      throw '';\n    }\n  } catch (e) {\n    throw 'RuntimeError: cross: invalid arguments';\n  }\n\n  var l1 = left.values[0],\n      l2 = left.values[1],\n      l3 = left.values[2];\n  var r1 = right.values[0],\n      r2 = right.values[1],\n      r3 = right.values[2];\n  return (0, _eval[\"default\"])((0, _Vector[\"default\"])([(0, _Minus[\"default\"])((0, _Times[\"default\"])(l2, r3), (0, _Times[\"default\"])(l3, r2)), (0, _Minus[\"default\"])((0, _Times[\"default\"])(l3, r1), (0, _Times[\"default\"])(l1, r3)), (0, _Minus[\"default\"])((0, _Times[\"default\"])(l1, r2), (0, _Times[\"default\"])(l2, r1))]), context);\n}));\nvar _default = crossPlugin;\nexports[\"default\"] = _default;","map":{"version":3,"mappings":";;;;;;;AACA;;AAOA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,MAA4B,GAAG,CACjC;EAAEC,IAAI,EAAE,GAAR;EAAaC,IAAI,EAAE,QAAnB;EAA6BC,QAAQ,EAAE;AAAvC,CADiC,EAEjC;EAAEF,IAAI,EAAE,GAAR;EAAaC,IAAI,EAAE,QAAnB;EAA6BC,QAAQ,EAAE;AAAvC,CAFiC,CAArC;AAKA,IAAMC,WAAW,GAAG,iCAAa,OAAb,CAApB;AACA,oCAAgBA,WAAhB,EAA6B,MAA7B;AACA,yCAAqBA,WAArB,EAAkC,qBAAlC;AAEA,sCACIA,WADJ,EAEI,yCACI,OADJ,EAEIJ,MAFJ,EAGI,yCAHJ,EAII,kDAJJ,EAKI,UAACK,UAAD,EAAaC,OAAb,EAAyB;EACrB,IAAMC,mBAAmB,GAAG,+CAA0B,OAA1B,EAAmCF,UAAnC,EAA+CL,MAA/C,EAAuDM,OAAvD,CAA5B;EACA,IAAME,IAAI,GAAWD,mBAAmB,CAAC,GAAD,CAAxC;EACA,IAAME,KAAK,GAAWF,mBAAmB,CAAC,GAAD,CAAzC;;EAEA,IAAI;IACA,IAAMG,QAAQ,GAAG,gCAAcF,IAAd,CAAjB;IACA,IAAMG,SAAS,GAAG,gCAAcF,KAAd,CAAlB;;IAEA,IAAIC,QAAQ,KAAK,CAAbA,IAAkBC,SAAS,KAAK,CAApC,EAAuC;MACnC,MAAM,EAAN;IACH;;IAED,IAAIH,IAAI,CAACI,MAALJ,CAAYK,MAAZL,KAAuB,CAAvBA,IAA4BC,KAAK,CAACG,MAANH,CAAaI,MAAbJ,KAAwB,CAAxD,EAA2D;MACvD,MAAM,EAAN;IACH;EAVL,EAWE,OAAOK,CAAP,EAAU;IACR,MAAM,wCAAN;EACH;;EAED,IAAMC,EAAE,GAAGP,IAAI,CAACI,MAALJ,CAAY,CAAZA,CAAX;EAAA,IACIQ,EAAE,GAAGR,IAAI,CAACI,MAALJ,CAAY,CAAZA,CADT;EAAA,IAEIS,EAAE,GAAGT,IAAI,CAACI,MAALJ,CAAY,CAAZA,CAFT;EAIA,IAAMU,EAAE,GAAGT,KAAK,CAACG,MAANH,CAAa,CAAbA,CAAX;EAAA,IACIU,EAAE,GAAGV,KAAK,CAACG,MAANH,CAAa,CAAbA,CADT;EAAA,IAEIW,EAAE,GAAGX,KAAK,CAACG,MAANH,CAAa,CAAbA,CAFT;EAIA,OAAO,sBACH,wBAAa,CACT,uBAAY,uBAAYO,EAAZ,EAAgBI,EAAhB,CAAZ,EAAiC,uBAAYH,EAAZ,EAAgBE,EAAhB,CAAjC,CADS,EAET,uBAAY,uBAAYF,EAAZ,EAAgBC,EAAhB,CAAZ,EAAiC,uBAAYH,EAAZ,EAAgBK,EAAhB,CAAjC,CAFS,EAGT,uBAAY,uBAAYL,EAAZ,EAAgBI,EAAhB,CAAZ,EAAiC,uBAAYH,EAAZ,EAAgBE,EAAhB,CAAjC,CAHS,CAAb,CADG,EAMHZ,OANG,CAAP;AAjCR,EAFJ;eA+CeF","names":["header","name","type","evaluate","crossPlugin","parameters","context","parameterStackFrame","left","right","leftRank","rightRank","values","length","e","l1","l2","l3","r1","r2","r3"],"sources":["/home/behrenle/Projects/private/arithmico-calculator/node_modules/@behrenle/number-cruncher/src/plugins/core/cross/cross.ts"],"sourcesContent":["import { FunctionHeaderItem, Vector } from './../../../types/SyntaxTreeNodes';\nimport {\n    addPluginAuthor,\n    addPluginDescription,\n    addPluginFunction,\n    createPlugin,\n    createPluginFunction,\n} from '../../../utils/plugin-builder';\nimport { mapParametersToStackFrame } from '../../../utils/parameter-utils';\nimport { getVectorRank } from '../../../utils/vector-utils';\nimport evaluate from '../../../eval';\nimport createVector from '../../../create/Vector';\nimport createMinus from '../../../create/Minus';\nimport createTimes from '../../../create/Times';\n\nconst header: FunctionHeaderItem[] = [\n    { name: 'a', type: 'vector', evaluate: true },\n    { name: 'b', type: 'vector', evaluate: true },\n];\n\nconst crossPlugin = createPlugin('cross');\naddPluginAuthor(crossPlugin, 'core');\naddPluginDescription(crossPlugin, 'adds cross function');\n\naddPluginFunction(\n    crossPlugin,\n    createPluginFunction(\n        'cross',\n        header,\n        'Calculate the vector product of a and b',\n        'Berechnet das Kreuzprodukt der Vektoren a und b.',\n        (parameters, context) => {\n            const parameterStackFrame = mapParametersToStackFrame('cross', parameters, header, context);\n            const left = <Vector>parameterStackFrame['a'];\n            const right = <Vector>parameterStackFrame['b'];\n\n            try {\n                const leftRank = getVectorRank(left);\n                const rightRank = getVectorRank(right);\n\n                if (leftRank !== 1 || rightRank !== 1) {\n                    throw '';\n                }\n\n                if (left.values.length !== 3 || right.values.length !== 3) {\n                    throw '';\n                }\n            } catch (e) {\n                throw 'RuntimeError: cross: invalid arguments';\n            }\n\n            const l1 = left.values[0],\n                l2 = left.values[1],\n                l3 = left.values[2];\n\n            const r1 = right.values[0],\n                r2 = right.values[1],\n                r3 = right.values[2];\n\n            return evaluate(\n                createVector([\n                    createMinus(createTimes(l2, r3), createTimes(l3, r2)),\n                    createMinus(createTimes(l3, r1), createTimes(l1, r3)),\n                    createMinus(createTimes(l1, r2), createTimes(l2, r1)),\n                ]),\n                context,\n            );\n        },\n    ),\n);\n\nexport default crossPlugin;\n"]},"metadata":{},"sourceType":"script"}