{"ast":null,"code":"// Generated by Peggy 1.2.0.\n//\n// https://peggyjs.org/\n\"use strict\";\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction transformRelationChain(terms, relationSymbols) {\n  var relations = [];\n  relationSymbols.forEach(function (relationSymbol, index) {\n    switch (relationSymbol) {\n      case \"=\":\n        relations.push({\n          type: \"equals\",\n          left: terms[index],\n          right: terms[index + 1]\n        });\n        break;\n\n      case \"<\":\n        relations.push({\n          type: \"less\",\n          left: terms[index],\n          right: terms[index + 1]\n        });\n        break;\n\n      case \">\":\n        relations.push({\n          type: \"greater\",\n          left: terms[index],\n          right: terms[index + 1]\n        });\n        break;\n\n      case \"<=\":\n        relations.push({\n          type: \"lessOrEquals\",\n          left: terms[index],\n          right: terms[index + 1]\n        });\n        break;\n\n      case \">=\":\n        relations.push({\n          type: \"greaterOrEquals\",\n          left: terms[index],\n          right: terms[index + 1]\n        });\n        break;\n\n      default:\n        error(\"SyntaxError: failed to parse relation chain\");\n    }\n  });\n\n  if (relations.length === 1) {\n    return relations[0];\n  }\n\n  return relations.reduceRight(function (right, left) {\n    return {\n      type: \"and\",\n      left: left,\n      right: right\n    };\n  });\n}\n\nfunction peg$subclass(child, parent) {\n  function C() {\n    this.constructor = child;\n  }\n\n  C.prototype = parent.prototype;\n  child.prototype = new C();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  var self = Error.call(this, message);\n\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(self, peg$SyntaxError.prototype);\n  }\n\n  self.expected = expected;\n  self.found = found;\n  self.location = location;\n  self.name = \"SyntaxError\";\n  return self;\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\nfunction peg$padEnd(str, targetLength, padString) {\n  padString = padString || \" \";\n\n  if (str.length > targetLength) {\n    return str;\n  }\n\n  targetLength -= str.length;\n  padString += padString.repeat(targetLength);\n  return str + padString.slice(0, targetLength);\n}\n\npeg$SyntaxError.prototype.format = function (sources) {\n  var str = \"Error: \" + this.message;\n\n  if (this.location) {\n    var src = null;\n    var k;\n\n    for (k = 0; k < sources.length; k++) {\n      if (sources[k].source === this.location.source) {\n        src = sources[k].text.split(/\\r\\n|\\n|\\r/g);\n        break;\n      }\n    }\n\n    var s = this.location.start;\n    var loc = this.location.source + \":\" + s.line + \":\" + s.column;\n\n    if (src) {\n      var e = this.location.end;\n      var filler = peg$padEnd(\"\", s.line.toString().length);\n      var line = src[s.line - 1];\n      var last = s.line === e.line ? e.column : line.length + 1;\n      str += \"\\n --> \" + loc + \"\\n\" + filler + \" |\\n\" + s.line + \" | \" + line + \"\\n\" + filler + \" | \" + peg$padEnd(\"\", s.column - 1) + peg$padEnd(\"\", last - s.column, \"^\");\n    } else {\n      str += \"\\n at \" + loc;\n    }\n  }\n\n  return str;\n};\n\npeg$SyntaxError.buildMessage = function (expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n    literal: function literal(expectation) {\n      return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n    },\n    \"class\": function _class(expectation) {\n      var escapedParts = expectation.parts.map(function (part) {\n        return Array.isArray(part) ? classEscape(part[0]) + \"-\" + classEscape(part[1]) : classEscape(part);\n      });\n      return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n    },\n    any: function any() {\n      return \"any character\";\n    },\n    end: function end() {\n      return \"end of input\";\n    },\n    other: function other(expectation) {\n      return expectation.description;\n    }\n  };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s.replace(/\\\\/g, \"\\\\\\\\\").replace(/\"/g, \"\\\\\\\"\").replace(/\\0/g, \"\\\\0\").replace(/\\t/g, \"\\\\t\").replace(/\\n/g, \"\\\\n\").replace(/\\r/g, \"\\\\r\").replace(/[\\x00-\\x0F]/g, function (ch) {\n      return \"\\\\x0\" + hex(ch);\n    }).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) {\n      return \"\\\\x\" + hex(ch);\n    });\n  }\n\n  function classEscape(s) {\n    return s.replace(/\\\\/g, \"\\\\\\\\\").replace(/\\]/g, \"\\\\]\").replace(/\\^/g, \"\\\\^\").replace(/-/g, \"\\\\-\").replace(/\\0/g, \"\\\\0\").replace(/\\t/g, \"\\\\t\").replace(/\\n/g, \"\\\\n\").replace(/\\r/g, \"\\\\r\").replace(/[\\x00-\\x0F]/g, function (ch) {\n      return \"\\\\x0\" + hex(ch);\n    }).replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) {\n      return \"\\\\x\" + hex(ch);\n    });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = expected.map(describeExpectation);\n    var i, j;\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \") + \", or \" + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== undefined ? options : {};\n  var peg$FAILED = {};\n  var peg$source = options.grammarSource;\n  var peg$startRuleFunctions = {\n    Start: peg$parseStart\n  };\n  var peg$startRuleFunction = peg$parseStart;\n  var peg$c0 = \":=\";\n  var peg$c1 = \":\";\n  var peg$c2 = \"number\";\n  var peg$c3 = \"boolean\";\n  var peg$c4 = \"vector\";\n  var peg$c5 = \"function\";\n  var peg$c6 = \"any\";\n  var peg$c7 = \",\";\n  var peg$c8 = \"(\";\n  var peg$c9 = \")\";\n  var peg$c10 = \"->\";\n  var peg$c11 = \"\\u2192\";\n  var peg$c12 = \"|\";\n  var peg$c13 = \"&\";\n  var peg$c14 = \"=\";\n  var peg$c15 = \"<=\";\n  var peg$c16 = \">=\";\n  var peg$c17 = \"<\";\n  var peg$c18 = \">\";\n  var peg$c19 = \"+\";\n  var peg$c20 = \"-\";\n  var peg$c21 = \"*\";\n  var peg$c22 = \"/\";\n  var peg$c23 = \"^\";\n  var peg$c24 = \"[\";\n  var peg$c25 = \"]\";\n  var peg$c26 = \"true\";\n  var peg$c27 = \"false\";\n  var peg$c28 = \"_\";\n  var peg$c29 = \".\";\n  var peg$r0 = /^[a-z]/;\n  var peg$r1 = /^[A-Z]/;\n  var peg$r2 = /^[0-9]/;\n  var peg$r3 = /^[ \\t\\n\\r]/;\n  var peg$e0 = peg$literalExpectation(\":=\", false);\n  var peg$e1 = peg$literalExpectation(\":\", false);\n  var peg$e2 = peg$literalExpectation(\"number\", false);\n  var peg$e3 = peg$literalExpectation(\"boolean\", false);\n  var peg$e4 = peg$literalExpectation(\"vector\", false);\n  var peg$e5 = peg$literalExpectation(\"function\", false);\n  var peg$e6 = peg$literalExpectation(\"any\", false);\n  var peg$e7 = peg$literalExpectation(\",\", false);\n  var peg$e8 = peg$literalExpectation(\"(\", false);\n  var peg$e9 = peg$literalExpectation(\")\", false);\n  var peg$e10 = peg$literalExpectation(\"->\", false);\n  var peg$e11 = peg$literalExpectation(\"\\u2192\", false);\n  var peg$e12 = peg$literalExpectation(\"|\", false);\n  var peg$e13 = peg$literalExpectation(\"&\", false);\n  var peg$e14 = peg$literalExpectation(\"=\", false);\n  var peg$e15 = peg$literalExpectation(\"<=\", false);\n  var peg$e16 = peg$literalExpectation(\">=\", false);\n  var peg$e17 = peg$literalExpectation(\"<\", false);\n  var peg$e18 = peg$literalExpectation(\">\", false);\n  var peg$e19 = peg$literalExpectation(\"+\", false);\n  var peg$e20 = peg$literalExpectation(\"-\", false);\n  var peg$e21 = peg$literalExpectation(\"*\", false);\n  var peg$e22 = peg$literalExpectation(\"/\", false);\n  var peg$e23 = peg$literalExpectation(\"^\", false);\n  var peg$e24 = peg$literalExpectation(\"[\", false);\n  var peg$e25 = peg$literalExpectation(\"]\", false);\n  var peg$e26 = peg$otherExpectation(\"boolean\");\n  var peg$e27 = peg$literalExpectation(\"true\", false);\n  var peg$e28 = peg$literalExpectation(\"false\", false);\n  var peg$e29 = peg$otherExpectation(\"symbol\");\n  var peg$e30 = peg$classExpectation([[\"a\", \"z\"]], false, false);\n  var peg$e31 = peg$classExpectation([[\"A\", \"Z\"]], false, false);\n  var peg$e32 = peg$literalExpectation(\"_\", false);\n  var peg$e33 = peg$otherExpectation(\"number\");\n  var peg$e34 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n  var peg$e35 = peg$literalExpectation(\".\", false);\n  var peg$e36 = peg$otherExpectation(\"whitespace\");\n  var peg$e37 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false);\n\n  var peg$f0 = function peg$f0(v) {\n    return v;\n  };\n\n  var peg$f1 = function peg$f1(symbol, expr) {\n    return {\n      type: \"define\",\n      name: symbol.name,\n      value: expr\n    };\n  };\n\n  var peg$f2 = function peg$f2(type) {\n    return type;\n  };\n\n  var peg$f3 = function peg$f3(symbol, type) {\n    return {\n      name: symbol.name,\n      type: type ? type : \"any\",\n      evaluate: true\n    };\n  };\n\n  var peg$f4 = function peg$f4(symbol) {\n    return symbol;\n  };\n\n  var peg$f5 = function peg$f5(first, rest) {\n    return [first].concat(_toConsumableArray(rest));\n  };\n\n  var peg$f6 = function peg$f6(symbol, parameters, expr) {\n    return {\n      type: \"define\",\n      name: symbol.name,\n      value: {\n        type: \"lambda\",\n        name: symbol.name,\n        header: parameters ? parameters : [],\n        expression: expr\n      }\n    };\n  };\n\n  var peg$f7 = function peg$f7(parameters, expr) {\n    return {\n      type: \"lambda\",\n      name: \"lambda\",\n      header: parameters ? parameters : [],\n      expression: expr\n    };\n  };\n\n  var peg$f8 = function peg$f8(left, right) {\n    return {\n      type: \"or\",\n      left: left,\n      right: right\n    };\n  };\n\n  var peg$f9 = function peg$f9(left, right) {\n    return {\n      type: \"and\",\n      left: left,\n      right: right\n    };\n  };\n\n  var peg$f10 = function peg$f10(startTerm, chainElements) {\n    var terms = [startTerm].concat(_toConsumableArray(chainElements.map(function (chainElement) {\n      return chainElement.term;\n    })));\n    var relationSymbols = chainElements.map(function (chainElement) {\n      return chainElement.relationSymbol;\n    });\n    return transformRelationChain(terms, relationSymbols);\n  };\n\n  var peg$f11 = function peg$f11(relationSymbol, term) {\n    return {\n      relationSymbol: relationSymbol,\n      term: term\n    };\n  };\n\n  var peg$f12 = function peg$f12(left, right) {\n    return {\n      type: \"plus\",\n      left: left,\n      right: right\n    };\n  };\n\n  var peg$f13 = function peg$f13(item) {\n    return item;\n  };\n\n  var peg$f14 = function peg$f14(first, rest) {\n    var items = [first].concat(_toConsumableArray(rest));\n    return items.reduce(function (left, right) {\n      return {\n        type: \"minus\",\n        left: left,\n        right: right\n      };\n    });\n  };\n\n  var peg$f15 = function peg$f15(value) {\n    return {\n      type: \"negate\",\n      value: value\n    };\n  };\n\n  var peg$f16 = function peg$f16(left, right) {\n    return {\n      type: \"times\",\n      left: left,\n      right: right\n    };\n  };\n\n  var peg$f17 = function peg$f17(first, rest) {\n    var items = [first].concat(_toConsumableArray(rest));\n    return items.reduce(function (left, right) {\n      return {\n        type: \"divided\",\n        left: left,\n        right: right\n      };\n    });\n  };\n\n  var peg$f18 = function peg$f18(left, right) {\n    return {\n      type: \"power\",\n      left: left,\n      right: right\n    };\n  };\n\n  var peg$f19 = function peg$f19(expr) {\n    return expr;\n  };\n\n  var peg$f20 = function peg$f20(list) {\n    return {\n      type: \"vector\",\n      values: list ? list : []\n    };\n  };\n\n  var peg$f21 = function peg$f21(func, parameters) {\n    return {\n      type: \"functionCall\",\n      \"function\": func,\n      parameters: parameters ? parameters : []\n    };\n  };\n\n  var peg$f22 = function peg$f22(v) {\n    return {\n      type: \"boolean\",\n      value: v === \"true\"\n    };\n  };\n\n  var peg$f23 = function peg$f23() {\n    if (text() === \"__proto__\") {\n      error(\"SyntaxError: illegal symbol name '__proto__'\");\n    }\n\n    return {\n      type: \"symbol\",\n      name: text()\n    };\n  };\n\n  var peg$f24 = function peg$f24() {\n    return {\n      type: \"number\",\n      value: parseFloat(text(), 10)\n    };\n  };\n\n  var peg$currPos = 0;\n  var peg$savedPos = 0;\n  var peg$posDetailsCache = [{\n    line: 1,\n    column: 1\n  }];\n  var peg$maxFailPos = 0;\n  var peg$maxFailExpected = [];\n  var peg$silentFails = 0;\n  var peg$resultsCache = {};\n  var peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$savedPos;\n  }\n\n  function range() {\n    return {\n      source: peg$source,\n      start: peg$savedPos,\n      end: peg$currPos\n    };\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== undefined ? location : peg$computeLocation(peg$savedPos, peg$currPos);\n    throw peg$buildStructuredError([peg$otherExpectation(description)], input.substring(peg$savedPos, peg$currPos), location);\n  }\n\n  function error(message, location) {\n    location = location !== undefined ? location : peg$computeLocation(peg$savedPos, peg$currPos);\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return {\n      type: \"literal\",\n      text: text,\n      ignoreCase: ignoreCase\n    };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return {\n      type: \"class\",\n      parts: parts,\n      inverted: inverted,\n      ignoreCase: ignoreCase\n    };\n  }\n\n  function peg$anyExpectation() {\n    return {\n      type: \"any\"\n    };\n  }\n\n  function peg$endExpectation() {\n    return {\n      type: \"end\"\n    };\n  }\n\n  function peg$otherExpectation(description) {\n    return {\n      type: \"other\",\n      description: description\n    };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos];\n    var p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos);\n    var endPosDetails = peg$computePosDetails(endPos);\n    return {\n      source: peg$source,\n      start: {\n        offset: startPos,\n        line: startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line: endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) {\n      return;\n    }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(peg$SyntaxError.buildMessage(expected, found), expected, found, location);\n  }\n\n  function peg$parseStart() {\n    var s0, s1, s2, s3;\n    var key = peg$currPos * 31 + 0;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    s2 = peg$parseDefine();\n\n    if (s2 === peg$FAILED) {\n      s2 = peg$parseOr();\n    }\n\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      peg$savedPos = s0;\n      s0 = peg$f0(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n\n  function peg$parseDefine() {\n    var s0;\n    var key = peg$currPos * 31 + 1;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n\n    s0 = peg$parseDefineFunction();\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseDefineVariable();\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n\n  function peg$parseDefineVariable() {\n    var s0, s1, s2, s3, s4, s5;\n    var key = peg$currPos * 31 + 2;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseSymbol();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n\n      if (input.substr(peg$currPos, 2) === peg$c0) {\n        s3 = peg$c0;\n        peg$currPos += 2;\n      } else {\n        s3 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e0);\n        }\n      }\n\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parse_();\n        s5 = peg$parseOr();\n\n        if (s5 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f1(s1, s5);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n\n  function peg$parseSymbolType() {\n    var s0, s1, s2, s3, s4;\n    var key = peg$currPos * 31 + 3;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n\n    if (input.charCodeAt(peg$currPos) === 58) {\n      s2 = peg$c1;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e1);\n      }\n    }\n\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n\n      if (input.substr(peg$currPos, 6) === peg$c2) {\n        s4 = peg$c2;\n        peg$currPos += 6;\n      } else {\n        s4 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e2);\n        }\n      }\n\n      if (s4 === peg$FAILED) {\n        if (input.substr(peg$currPos, 7) === peg$c3) {\n          s4 = peg$c3;\n          peg$currPos += 7;\n        } else {\n          s4 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e3);\n          }\n        }\n\n        if (s4 === peg$FAILED) {\n          if (input.substr(peg$currPos, 6) === peg$c4) {\n            s4 = peg$c4;\n            peg$currPos += 6;\n          } else {\n            s4 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e4);\n            }\n          }\n\n          if (s4 === peg$FAILED) {\n            if (input.substr(peg$currPos, 8) === peg$c5) {\n              s4 = peg$c5;\n              peg$currPos += 8;\n            } else {\n              s4 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$e5);\n              }\n            }\n\n            if (s4 === peg$FAILED) {\n              if (input.substr(peg$currPos, 3) === peg$c6) {\n                s4 = peg$c6;\n                peg$currPos += 3;\n              } else {\n                s4 = peg$FAILED;\n\n                if (peg$silentFails === 0) {\n                  peg$fail(peg$e6);\n                }\n              }\n            }\n          }\n        }\n      }\n\n      if (s4 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f2(s4);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n\n  function peg$parseTypedSymbol() {\n    var s0, s1, s2;\n    var key = peg$currPos * 31 + 4;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseSymbol();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSymbolType();\n\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n\n      peg$savedPos = s0;\n      s0 = peg$f3(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n\n  function peg$parseSymbolListItem() {\n    var s0, s1, s2, s3, s4;\n    var key = peg$currPos * 31 + 5;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n\n    if (input.charCodeAt(peg$currPos) === 44) {\n      s2 = peg$c7;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e7);\n      }\n    }\n\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      s4 = peg$parseTypedSymbol();\n\n      if (s4 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f4(s4);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n\n  function peg$parseSymbolList() {\n    var s0, s1, s2, s3, s4;\n    var key = peg$currPos * 31 + 6;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseTypedSymbol();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      s3 = [];\n      s4 = peg$parseSymbolListItem();\n\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        s4 = peg$parseSymbolListItem();\n      }\n\n      peg$savedPos = s0;\n      s0 = peg$f5(s1, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n\n  function peg$parseDefineFunction() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11;\n    var key = peg$currPos * 31 + 7;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseSymbol();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s3 = peg$c8;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e8);\n        }\n      }\n\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parse_();\n        s5 = peg$parseSymbolList();\n\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s7 = peg$c9;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e9);\n            }\n          }\n\n          if (s7 !== peg$FAILED) {\n            s8 = peg$parse_();\n\n            if (input.substr(peg$currPos, 2) === peg$c0) {\n              s9 = peg$c0;\n              peg$currPos += 2;\n            } else {\n              s9 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$e0);\n              }\n            }\n\n            if (s9 !== peg$FAILED) {\n              s10 = peg$parse_();\n              s11 = peg$parseOr();\n\n              if (s11 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s0 = peg$f6(s1, s5, s11);\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n\n  function peg$parseDefineLambdaFunction() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n    var key = peg$currPos * 31 + 8;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c8;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e8);\n      }\n    }\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      s3 = peg$parseSymbolList();\n\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parse_();\n\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s5 = peg$c9;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e9);\n          }\n        }\n\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n\n          if (input.substr(peg$currPos, 2) === peg$c10) {\n            s7 = peg$c10;\n            peg$currPos += 2;\n          } else {\n            s7 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e10);\n            }\n          }\n\n          if (s7 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 8594) {\n              s7 = peg$c11;\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$e11);\n              }\n            }\n          }\n\n          if (s7 !== peg$FAILED) {\n            s8 = peg$parse_();\n            s9 = peg$parseOr();\n\n            if (s9 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s0 = peg$f7(s3, s9);\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n\n  function peg$parseOr() {\n    var s0, s1, s2, s3, s4, s5;\n    var key = peg$currPos * 31 + 9;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseAnd();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n\n      if (input.charCodeAt(peg$currPos) === 124) {\n        s3 = peg$c12;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e12);\n        }\n      }\n\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parse_();\n        s5 = peg$parseOr();\n\n        if (s5 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f8(s1, s5);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseAnd();\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n\n  function peg$parseAnd() {\n    var s0, s1, s2, s3, s4, s5;\n    var key = peg$currPos * 31 + 10;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseRelationChain();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n\n      if (input.charCodeAt(peg$currPos) === 38) {\n        s3 = peg$c13;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e13);\n        }\n      }\n\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parse_();\n        s5 = peg$parseAnd();\n\n        if (s5 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f9(s1, s5);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseRelationChain();\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n\n  function peg$parseRelationChain() {\n    var s0, s1, s2, s3;\n    var key = peg$currPos * 31 + 11;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parsePlus();\n\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseRelationChainElement();\n\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseRelationChainElement();\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f10(s1, s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsePlus();\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n\n  function peg$parseRelationChainElement() {\n    var s0, s1, s2, s3, s4, s5;\n    var key = peg$currPos * 31 + 12;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n\n    if (input.charCodeAt(peg$currPos) === 61) {\n      s2 = peg$c14;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e14);\n      }\n    }\n\n    if (s2 === peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c15) {\n        s2 = peg$c15;\n        peg$currPos += 2;\n      } else {\n        s2 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e15);\n        }\n      }\n\n      if (s2 === peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c16) {\n          s2 = peg$c16;\n          peg$currPos += 2;\n        } else {\n          s2 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e16);\n          }\n        }\n\n        if (s2 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 60) {\n            s2 = peg$c17;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e17);\n            }\n          }\n\n          if (s2 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 62) {\n              s2 = peg$c18;\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$e18);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      s4 = peg$parsePlus();\n\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parse_();\n        peg$savedPos = s0;\n        s0 = peg$f11(s2, s4);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n\n  function peg$parsePlus() {\n    var s0, s1, s2, s3, s4, s5;\n    var key = peg$currPos * 31 + 13;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseMinus();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n\n      if (input.charCodeAt(peg$currPos) === 43) {\n        s3 = peg$c19;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e19);\n        }\n      }\n\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parse_();\n        s5 = peg$parsePlus();\n\n        if (s5 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f12(s1, s5);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseMinus();\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n\n  function peg$parseMinusItem() {\n    var s0, s1, s2, s3, s4;\n    var key = peg$currPos * 31 + 14;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n\n    if (input.charCodeAt(peg$currPos) === 45) {\n      s2 = peg$c20;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e20);\n      }\n    }\n\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      s4 = peg$parseTimes();\n\n      if (s4 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f13(s4);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n\n  function peg$parseMinus() {\n    var s0, s1, s2, s3;\n    var key = peg$currPos * 31 + 15;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseTimes();\n\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseNegate();\n    }\n\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseMinusItem();\n\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseMinusItem();\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f14(s1, s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseNegate();\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n\n  function peg$parseNegate() {\n    var s0, s1, s2, s3, s4;\n    var key = peg$currPos * 31 + 16;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n\n    if (input.charCodeAt(peg$currPos) === 45) {\n      s2 = peg$c20;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e20);\n      }\n    }\n\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      s4 = peg$parseNegate();\n\n      if (s4 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f15(s4);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseTimes();\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n\n  function peg$parseTimes() {\n    var s0, s1, s2, s3, s4, s5;\n    var key = peg$currPos * 31 + 17;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseDivided();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n\n      if (input.charCodeAt(peg$currPos) === 42) {\n        s3 = peg$c21;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e21);\n        }\n      }\n\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parse_();\n        s5 = peg$parseTimes();\n\n        if (s5 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f16(s1, s5);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseDivided();\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n\n  function peg$parseDividedItem() {\n    var s0, s1, s2, s3, s4;\n    var key = peg$currPos * 31 + 18;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n\n    if (input.charCodeAt(peg$currPos) === 47) {\n      s2 = peg$c22;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e22);\n      }\n    }\n\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      s4 = peg$parsePower();\n\n      if (s4 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f13(s4);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n\n  function peg$parseDivided() {\n    var s0, s1, s2, s3;\n    var key = peg$currPos * 31 + 19;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parsePower();\n\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseDividedItem();\n\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseDividedItem();\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f17(s1, s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsePower();\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n\n  function peg$parsePower() {\n    var s0, s1, s2, s3, s4, s5;\n    var key = peg$currPos * 31 + 20;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseValue();\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n\n      if (input.charCodeAt(peg$currPos) === 94) {\n        s3 = peg$c23;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e23);\n        }\n      }\n\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parse_();\n        s5 = peg$parseValue();\n\n        if (s5 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f18(s1, s5);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseValue();\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n\n  function peg$parseValue() {\n    var s0;\n    var key = peg$currPos * 31 + 21;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n\n    s0 = peg$parseBoolean();\n\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseFunctionCall();\n\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseSymbol();\n\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseNumber();\n\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseVector();\n\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseDefineLambdaFunction();\n\n              if (s0 === peg$FAILED) {\n                s0 = peg$parseSubExpression();\n              }\n            }\n          }\n        }\n      }\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n\n  function peg$parseSubExpression() {\n    var s0, s1, s2, s3, s4, s5;\n    var key = peg$currPos * 31 + 22;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c8;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e8);\n      }\n    }\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      s3 = peg$parseOr();\n\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parse_();\n\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s5 = peg$c9;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e9);\n          }\n        }\n\n        if (s5 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f19(s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n\n  function peg$parseListElement() {\n    var s0, s1, s2, s3, s4;\n    var key = peg$currPos * 31 + 23;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n\n    if (input.charCodeAt(peg$currPos) === 44) {\n      s2 = peg$c7;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e7);\n      }\n    }\n\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      s4 = peg$parseOr();\n\n      if (s4 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f13(s4);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n\n  function peg$parseList() {\n    var s0, s1, s2, s3, s4;\n    var key = peg$currPos * 31 + 24;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    s2 = peg$parseOr();\n\n    if (s2 !== peg$FAILED) {\n      s3 = [];\n      s4 = peg$parseListElement();\n\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        s4 = peg$parseListElement();\n      }\n\n      s4 = peg$parse_();\n      peg$savedPos = s0;\n      s0 = peg$f5(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n\n  function peg$parseVector() {\n    var s0, s1, s2, s3;\n    var key = peg$currPos * 31 + 25;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c24;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e24);\n      }\n    }\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseList();\n\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n\n      if (input.charCodeAt(peg$currPos) === 93) {\n        s3 = peg$c25;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e25);\n        }\n      }\n\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f20(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n\n  function peg$parseFunctionCall() {\n    var s0, s1, s2, s3, s4, s5;\n    var key = peg$currPos * 31 + 26;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseSymbol();\n\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseSubExpression();\n    }\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s3 = peg$c8;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e8);\n        }\n      }\n\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parseList();\n\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s5 = peg$c9;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e9);\n          }\n        }\n\n        if (s5 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f21(s1, s4);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n\n  function peg$parseBoolean() {\n    var s0, s1;\n    var key = peg$currPos * 31 + 27;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n\n    if (input.substr(peg$currPos, 4) === peg$c26) {\n      s1 = peg$c26;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e27);\n      }\n    }\n\n    if (s1 === peg$FAILED) {\n      if (input.substr(peg$currPos, 5) === peg$c27) {\n        s1 = peg$c27;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e28);\n        }\n      }\n    }\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f22(s1);\n    }\n\n    s0 = s1;\n    peg$silentFails--;\n\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e26);\n      }\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n\n  function peg$parseSymbol() {\n    var s0, s1, s2;\n    var key = peg$currPos * 31 + 28;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n\n    if (peg$r0.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e30);\n      }\n    }\n\n    if (s2 === peg$FAILED) {\n      if (peg$r1.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e31);\n        }\n      }\n\n      if (s2 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 95) {\n          s2 = peg$c28;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e32);\n          }\n        }\n      }\n    }\n\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n\n        if (peg$r0.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e30);\n          }\n        }\n\n        if (s2 === peg$FAILED) {\n          if (peg$r1.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e31);\n            }\n          }\n\n          if (s2 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 95) {\n              s2 = peg$c28;\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n\n              if (peg$silentFails === 0) {\n                peg$fail(peg$e32);\n              }\n            }\n          }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f23();\n    }\n\n    s0 = s1;\n    peg$silentFails--;\n\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e29);\n      }\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n\n  function peg$parseNumber() {\n    var s0, s1, s2, s3, s4, s5;\n    var key = peg$currPos * 31 + 29;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n\n    if (peg$r2.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e34);\n      }\n    }\n\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n\n        if (peg$r2.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e34);\n          }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s3 = peg$c29;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e35);\n        }\n      }\n\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n\n        if (peg$r2.test(input.charAt(peg$currPos))) {\n          s5 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n\n          if (peg$silentFails === 0) {\n            peg$fail(peg$e34);\n          }\n        }\n\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n\n          if (peg$r2.test(input.charAt(peg$currPos))) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n\n            if (peg$silentFails === 0) {\n              peg$fail(peg$e34);\n            }\n          }\n        }\n\n        s3 = [s3, s4];\n        s2 = s3;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n\n      peg$savedPos = s0;\n      s0 = peg$f24();\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$silentFails--;\n\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e33);\n      }\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1;\n    var key = peg$currPos * 31 + 30;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n      return cached.result;\n    }\n\n    peg$silentFails++;\n    s0 = [];\n\n    if (peg$r3.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n\n      if (peg$silentFails === 0) {\n        peg$fail(peg$e37);\n      }\n    }\n\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n\n      if (peg$r3.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n\n        if (peg$silentFails === 0) {\n          peg$fail(peg$e37);\n        }\n      }\n    }\n\n    peg$silentFails--;\n    s1 = peg$FAILED;\n\n    if (peg$silentFails === 0) {\n      peg$fail(peg$e36);\n    }\n\n    peg$resultsCache[key] = {\n      nextPos: peg$currPos,\n      result: s0\n    };\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1) : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse: peg$parse\n};","map":{"version":3,"mappings":"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","names":["transformRelationChain","terms","relationSymbols","relations","forEach","relationSymbol","index","push","type","left","right","error","length","reduceRight","peg$subclass","child","parent","C","constructor","prototype","peg$SyntaxError","message","expected","found","location","self","Error","call","Object","setPrototypeOf","name","peg$padEnd","str","targetLength","padString","repeat","slice","format","sources","src","k","source","text","split","s","start","loc","line","column","e","end","filler","toString","last","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","escapedParts","parts","map","part","Array","isArray","classEscape","inverted","any","other","description","hex","ch","charCodeAt","toUpperCase","replace","describeExpectation","describeExpected","descriptions","i","j","sort","join","describeFound","peg$parse","input","options","undefined","peg$FAILED","peg$source","grammarSource","peg$startRuleFunctions","Start","peg$parseStart","peg$startRuleFunction","peg$c0","peg$c1","peg$c2","peg$c3","peg$c4","peg$c5","peg$c6","peg$c7","peg$c8","peg$c9","peg$c10","peg$c11","peg$c12","peg$c13","peg$c14","peg$c15","peg$c16","peg$c17","peg$c18","peg$c19","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c26","peg$c27","peg$c28","peg$c29","peg$r0","peg$r1","peg$r2","peg$r3","peg$e0","peg$literalExpectation","peg$e1","peg$e2","peg$e3","peg$e4","peg$e5","peg$e6","peg$e7","peg$e8","peg$e9","peg$e10","peg$e11","peg$e12","peg$e13","peg$e14","peg$e15","peg$e16","peg$e17","peg$e18","peg$e19","peg$e20","peg$e21","peg$e22","peg$e23","peg$e24","peg$e25","peg$e26","peg$otherExpectation","peg$e27","peg$e28","peg$e29","peg$e30","peg$classExpectation","peg$e31","peg$e32","peg$e33","peg$e34","peg$e35","peg$e36","peg$e37","peg$f0","v","peg$f1","symbol","expr","value","peg$f2","peg$f3","evaluate","peg$f4","peg$f5","first","rest","peg$f6","parameters","header","expression","peg$f7","peg$f8","peg$f9","peg$f10","startTerm","chainElements","chainElement","term","peg$f11","peg$f12","peg$f13","item","peg$f14","items","reduce","peg$f15","peg$f16","peg$f17","peg$f18","peg$f19","peg$f20","list","values","peg$f21","func","peg$f22","peg$f23","peg$f24","parseFloat","peg$currPos","peg$savedPos","peg$posDetailsCache","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","peg$resultsCache","peg$result","startRule","substring","offset","range","peg$computeLocation","peg$buildStructuredError","peg$buildSimpleError","ignoreCase","peg$anyExpectation","peg$endExpectation","peg$computePosDetails","pos","details","p","startPos","endPos","startPosDetails","endPosDetails","peg$fail","s0","s1","s2","s3","key","cached","nextPos","result","peg$parse_","peg$parseDefine","peg$parseOr","peg$parseDefineFunction","peg$parseDefineVariable","s4","s5","peg$parseSymbol","substr","peg$parseSymbolType","peg$parseTypedSymbol","peg$parseSymbolListItem","peg$parseSymbolList","s6","s7","s8","s9","s10","s11","peg$parseDefineLambdaFunction","peg$parseAnd","peg$parseRelationChain","peg$parsePlus","peg$parseRelationChainElement","peg$parseMinus","peg$parseMinusItem","peg$parseTimes","peg$parseNegate","peg$parseDivided","peg$parseDividedItem","peg$parsePower","peg$parseValue","peg$parseBoolean","peg$parseFunctionCall","peg$parseNumber","peg$parseVector","peg$parseSubExpression","peg$parseListElement","peg$parseList","test","charAt","module","exports","SyntaxError","parse"],"sources":["/home/behrenle/Projects/private/arithmico-calculator/node_modules/@behrenle/number-cruncher/src/parse/parser.js"],"sourcesContent":["// Generated by Peggy 1.2.0.\n//\n// https://peggyjs.org/\n\n\"use strict\";\n\n\n    function transformRelationChain(terms, relationSymbols) {\n        let relations = [];\n        relationSymbols.forEach((relationSymbol, index) => {\n            switch (relationSymbol) {\n                case \"=\":\n                    relations.push({\n                        type: \"equals\",\n                        left: terms[index],\n                        right: terms[index + 1]\n                    });\n                    break;\n\n                case \"<\":\n                    relations.push({\n                        type: \"less\",\n                        left: terms[index],\n                        right: terms[index + 1]\n                    })\n                    break;\n\n                case \">\":\n                    relations.push({\n                        type: \"greater\",\n                        left: terms[index],\n                        right: terms[index + 1]\n                    })\n                    break;\n\n                case \"<=\":\n                    relations.push({\n                        type: \"lessOrEquals\",\n                        left: terms[index],\n                        right: terms[index + 1]\n                    })\n                    break;\n\n                case \">=\":\n                    relations.push({\n                        type: \"greaterOrEquals\",\n                        left: terms[index],\n                        right: terms[index + 1]\n                    })\n                    break;\n            \n                default:\n                    error(\"SyntaxError: failed to parse relation chain\");\n            }\n        });\n\n        if (relations.length === 1) {\n            return relations[0];\n        }\n\n        return relations.reduceRight((right, left) => ({\n            type: \"and\",\n            left,\n            right\n        }));\n    }\n\n\nfunction peg$subclass(child, parent) {\n  function C() { this.constructor = child; }\n  C.prototype = parent.prototype;\n  child.prototype = new C();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  var self = Error.call(this, message);\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(self, peg$SyntaxError.prototype);\n  }\n  self.expected = expected;\n  self.found = found;\n  self.location = location;\n  self.name = \"SyntaxError\";\n  return self;\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\nfunction peg$padEnd(str, targetLength, padString) {\n  padString = padString || \" \";\n  if (str.length > targetLength) { return str; }\n  targetLength -= str.length;\n  padString += padString.repeat(targetLength);\n  return str + padString.slice(0, targetLength);\n}\n\npeg$SyntaxError.prototype.format = function(sources) {\n  var str = \"Error: \" + this.message;\n  if (this.location) {\n    var src = null;\n    var k;\n    for (k = 0; k < sources.length; k++) {\n      if (sources[k].source === this.location.source) {\n        src = sources[k].text.split(/\\r\\n|\\n|\\r/g);\n        break;\n      }\n    }\n    var s = this.location.start;\n    var loc = this.location.source + \":\" + s.line + \":\" + s.column;\n    if (src) {\n      var e = this.location.end;\n      var filler = peg$padEnd(\"\", s.line.toString().length);\n      var line = src[s.line - 1];\n      var last = s.line === e.line ? e.column : line.length + 1;\n      str += \"\\n --> \" + loc + \"\\n\"\n          + filler + \" |\\n\"\n          + s.line + \" | \" + line + \"\\n\"\n          + filler + \" | \" + peg$padEnd(\"\", s.column - 1)\n          + peg$padEnd(\"\", last - s.column, \"^\");\n    } else {\n      str += \"\\n at \" + loc;\n    }\n  }\n  return str;\n};\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n    literal: function(expectation) {\n      return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n    },\n\n    class: function(expectation) {\n      var escapedParts = expectation.parts.map(function(part) {\n        return Array.isArray(part)\n          ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n          : classEscape(part);\n      });\n\n      return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n    },\n\n    any: function() {\n      return \"any character\";\n    },\n\n    end: function() {\n      return \"end of input\";\n    },\n\n    other: function(expectation) {\n      return expectation.description;\n    }\n  };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\"/g,  \"\\\\\\\"\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\\]/g, \"\\\\]\")\n      .replace(/\\^/g, \"\\\\^\")\n      .replace(/-/g,  \"\\\\-\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = expected.map(describeExpectation);\n    var i, j;\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== undefined ? options : {};\n\n  var peg$FAILED = {};\n  var peg$source = options.grammarSource;\n\n  var peg$startRuleFunctions = { Start: peg$parseStart };\n  var peg$startRuleFunction = peg$parseStart;\n\n  var peg$c0 = \":=\";\n  var peg$c1 = \":\";\n  var peg$c2 = \"number\";\n  var peg$c3 = \"boolean\";\n  var peg$c4 = \"vector\";\n  var peg$c5 = \"function\";\n  var peg$c6 = \"any\";\n  var peg$c7 = \",\";\n  var peg$c8 = \"(\";\n  var peg$c9 = \")\";\n  var peg$c10 = \"->\";\n  var peg$c11 = \"\\u2192\";\n  var peg$c12 = \"|\";\n  var peg$c13 = \"&\";\n  var peg$c14 = \"=\";\n  var peg$c15 = \"<=\";\n  var peg$c16 = \">=\";\n  var peg$c17 = \"<\";\n  var peg$c18 = \">\";\n  var peg$c19 = \"+\";\n  var peg$c20 = \"-\";\n  var peg$c21 = \"*\";\n  var peg$c22 = \"/\";\n  var peg$c23 = \"^\";\n  var peg$c24 = \"[\";\n  var peg$c25 = \"]\";\n  var peg$c26 = \"true\";\n  var peg$c27 = \"false\";\n  var peg$c28 = \"_\";\n  var peg$c29 = \".\";\n\n  var peg$r0 = /^[a-z]/;\n  var peg$r1 = /^[A-Z]/;\n  var peg$r2 = /^[0-9]/;\n  var peg$r3 = /^[ \\t\\n\\r]/;\n\n  var peg$e0 = peg$literalExpectation(\":=\", false);\n  var peg$e1 = peg$literalExpectation(\":\", false);\n  var peg$e2 = peg$literalExpectation(\"number\", false);\n  var peg$e3 = peg$literalExpectation(\"boolean\", false);\n  var peg$e4 = peg$literalExpectation(\"vector\", false);\n  var peg$e5 = peg$literalExpectation(\"function\", false);\n  var peg$e6 = peg$literalExpectation(\"any\", false);\n  var peg$e7 = peg$literalExpectation(\",\", false);\n  var peg$e8 = peg$literalExpectation(\"(\", false);\n  var peg$e9 = peg$literalExpectation(\")\", false);\n  var peg$e10 = peg$literalExpectation(\"->\", false);\n  var peg$e11 = peg$literalExpectation(\"\\u2192\", false);\n  var peg$e12 = peg$literalExpectation(\"|\", false);\n  var peg$e13 = peg$literalExpectation(\"&\", false);\n  var peg$e14 = peg$literalExpectation(\"=\", false);\n  var peg$e15 = peg$literalExpectation(\"<=\", false);\n  var peg$e16 = peg$literalExpectation(\">=\", false);\n  var peg$e17 = peg$literalExpectation(\"<\", false);\n  var peg$e18 = peg$literalExpectation(\">\", false);\n  var peg$e19 = peg$literalExpectation(\"+\", false);\n  var peg$e20 = peg$literalExpectation(\"-\", false);\n  var peg$e21 = peg$literalExpectation(\"*\", false);\n  var peg$e22 = peg$literalExpectation(\"/\", false);\n  var peg$e23 = peg$literalExpectation(\"^\", false);\n  var peg$e24 = peg$literalExpectation(\"[\", false);\n  var peg$e25 = peg$literalExpectation(\"]\", false);\n  var peg$e26 = peg$otherExpectation(\"boolean\");\n  var peg$e27 = peg$literalExpectation(\"true\", false);\n  var peg$e28 = peg$literalExpectation(\"false\", false);\n  var peg$e29 = peg$otherExpectation(\"symbol\");\n  var peg$e30 = peg$classExpectation([[\"a\", \"z\"]], false, false);\n  var peg$e31 = peg$classExpectation([[\"A\", \"Z\"]], false, false);\n  var peg$e32 = peg$literalExpectation(\"_\", false);\n  var peg$e33 = peg$otherExpectation(\"number\");\n  var peg$e34 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n  var peg$e35 = peg$literalExpectation(\".\", false);\n  var peg$e36 = peg$otherExpectation(\"whitespace\");\n  var peg$e37 = peg$classExpectation([\" \", \"\\t\", \"\\n\", \"\\r\"], false, false);\n\n  var peg$f0 = function(v) {\n      return v;\n  };\n  var peg$f1 = function(symbol, expr) {\n      return {\n          type: \"define\",\n          name: symbol.name,\n          value: expr\n      };\n  };\n  var peg$f2 = function(type) {\n      return type;\n  };\n  var peg$f3 = function(symbol, type) {\n      return {\n          name: symbol.name,\n          type: type ? type : \"any\",\n          evaluate: true\n      };\n  };\n  var peg$f4 = function(symbol) {\n      return symbol;\n  };\n  var peg$f5 = function(first, rest) {\n      return [first, ...rest];\n  };\n  var peg$f6 = function(symbol, parameters, expr) {\n      return {\n          type: \"define\",\n          name: symbol.name,\n          value: {\n              type: \"lambda\",\n              name: symbol.name,\n              header: parameters ? parameters : [],\n              expression: expr\n          }\n      };\n  };\n  var peg$f7 = function(parameters, expr) {\n      return {\n          type: \"lambda\",\n          name: \"lambda\",\n          header: parameters ? parameters : [],\n          expression: expr\n      };\n  };\n  var peg$f8 = function(left, right) {\n      return {\n          type: \"or\",\n          left, \n          right\n      };\n  };\n  var peg$f9 = function(left, right) {\n      return {\n          type: \"and\",\n          left, \n          right\n      };\n  };\n  var peg$f10 = function(startTerm, chainElements) {\n      const terms = [startTerm, ...chainElements.map(chainElement => chainElement.term)];\n      const relationSymbols = chainElements.map(chainElement => chainElement.relationSymbol);\n      return transformRelationChain(terms, relationSymbols);\n  };\n  var peg$f11 = function(relationSymbol, term) {\n      return {\n          relationSymbol, \n          term\n      };\n  };\n  var peg$f12 = function(left, right) {\n      return {\n          type: \"plus\",\n          left, \n          right\n      };\n  };\n  var peg$f13 = function(item) {\n      return item;\n  };\n  var peg$f14 = function(first, rest) {\n      const items = [first, ...rest];\n      return items.reduce((left, right) => ({\n          type: \"minus\",\n          left, \n          right\n      }));\n  };\n  var peg$f15 = function(value) {\n      return {\n          type: \"negate\",\n          value\n      };\n  };\n  var peg$f16 = function(left, right) {\n      return {\n          type: \"times\",\n          left,\n          right\n      };\n  };\n  var peg$f17 = function(first, rest) {\n      const items = [first, ...rest];\n      return items.reduce((left, right) => ({\n          type: \"divided\",\n          left, \n          right\n      }));\n  };\n  var peg$f18 = function(left, right) {\n      return {\n          type: \"power\",\n          left, \n          right\n      };\n  };\n  var peg$f19 = function(expr) {\n      return expr;\n  };\n  var peg$f20 = function(list) {\n      return {\n          type: \"vector\",\n          values: list ? list : []\n      };\n  };\n  var peg$f21 = function(func, parameters) {\n      return {\n          type: \"functionCall\",\n          function: func,\n          parameters: parameters ? parameters : []\n      }\n  };\n  var peg$f22 = function(v) { \n      return {\n          type: \"boolean\", \n          value: v === \"true\"\n      };\n  };\n  var peg$f23 = function() { \n      if (text() === \"__proto__\") {\n          error(\"SyntaxError: illegal symbol name '__proto__'\")\n      }\n\n      return {\n          type: \"symbol\", \n          name: text()\n      }; \n  };\n  var peg$f24 = function() { \n      return {\n          type: \"number\", \n          value: parseFloat(text(), 10)\n      }; \n  };\n\n  var peg$currPos = 0;\n  var peg$savedPos = 0;\n  var peg$posDetailsCache = [{ line: 1, column: 1 }];\n  var peg$maxFailPos = 0;\n  var peg$maxFailExpected = [];\n  var peg$silentFails = 0;\n\n  var peg$resultsCache = {};\n\n  var peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$savedPos;\n  }\n\n  function range() {\n    return {\n      source: peg$source,\n      start: peg$savedPos,\n      end: peg$currPos\n    };\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos];\n    var p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos);\n    var endPosDetails = peg$computePosDetails(endPos);\n\n    return {\n      source: peg$source,\n      start: {\n        offset: startPos,\n        line: startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line: endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parseStart() {\n    var s0, s1, s2, s3;\n\n    var key = peg$currPos * 31 + 0;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    s2 = peg$parseDefine();\n    if (s2 === peg$FAILED) {\n      s2 = peg$parseOr();\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      peg$savedPos = s0;\n      s0 = peg$f0(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseDefine() {\n    var s0;\n\n    var key = peg$currPos * 31 + 1;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$parseDefineFunction();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseDefineVariable();\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseDefineVariable() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key = peg$currPos * 31 + 2;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseSymbol();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (input.substr(peg$currPos, 2) === peg$c0) {\n        s3 = peg$c0;\n        peg$currPos += 2;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e0); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parse_();\n        s5 = peg$parseOr();\n        if (s5 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f1(s1, s5);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseSymbolType() {\n    var s0, s1, s2, s3, s4;\n\n    var key = peg$currPos * 31 + 3;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (input.charCodeAt(peg$currPos) === 58) {\n      s2 = peg$c1;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e1); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      if (input.substr(peg$currPos, 6) === peg$c2) {\n        s4 = peg$c2;\n        peg$currPos += 6;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e2); }\n      }\n      if (s4 === peg$FAILED) {\n        if (input.substr(peg$currPos, 7) === peg$c3) {\n          s4 = peg$c3;\n          peg$currPos += 7;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e3); }\n        }\n        if (s4 === peg$FAILED) {\n          if (input.substr(peg$currPos, 6) === peg$c4) {\n            s4 = peg$c4;\n            peg$currPos += 6;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e4); }\n          }\n          if (s4 === peg$FAILED) {\n            if (input.substr(peg$currPos, 8) === peg$c5) {\n              s4 = peg$c5;\n              peg$currPos += 8;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$e5); }\n            }\n            if (s4 === peg$FAILED) {\n              if (input.substr(peg$currPos, 3) === peg$c6) {\n                s4 = peg$c6;\n                peg$currPos += 3;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$e6); }\n              }\n            }\n          }\n        }\n      }\n      if (s4 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f2(s4);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseTypedSymbol() {\n    var s0, s1, s2;\n\n    var key = peg$currPos * 31 + 4;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseSymbol();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseSymbolType();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f3(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseSymbolListItem() {\n    var s0, s1, s2, s3, s4;\n\n    var key = peg$currPos * 31 + 5;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (input.charCodeAt(peg$currPos) === 44) {\n      s2 = peg$c7;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e7); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      s4 = peg$parseTypedSymbol();\n      if (s4 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f4(s4);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseSymbolList() {\n    var s0, s1, s2, s3, s4;\n\n    var key = peg$currPos * 31 + 6;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseTypedSymbol();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      s3 = [];\n      s4 = peg$parseSymbolListItem();\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        s4 = peg$parseSymbolListItem();\n      }\n      peg$savedPos = s0;\n      s0 = peg$f5(s1, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseDefineFunction() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11;\n\n    var key = peg$currPos * 31 + 7;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseSymbol();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s3 = peg$c8;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e8); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parse_();\n        s5 = peg$parseSymbolList();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s7 = peg$c9;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e9); }\n          }\n          if (s7 !== peg$FAILED) {\n            s8 = peg$parse_();\n            if (input.substr(peg$currPos, 2) === peg$c0) {\n              s9 = peg$c0;\n              peg$currPos += 2;\n            } else {\n              s9 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$e0); }\n            }\n            if (s9 !== peg$FAILED) {\n              s10 = peg$parse_();\n              s11 = peg$parseOr();\n              if (s11 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s0 = peg$f6(s1, s5, s11);\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseDefineLambdaFunction() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    var key = peg$currPos * 31 + 8;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c8;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e8); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      s3 = peg$parseSymbolList();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parse_();\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s5 = peg$c9;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e9); }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parse_();\n          if (input.substr(peg$currPos, 2) === peg$c10) {\n            s7 = peg$c10;\n            peg$currPos += 2;\n          } else {\n            s7 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e10); }\n          }\n          if (s7 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 8594) {\n              s7 = peg$c11;\n              peg$currPos++;\n            } else {\n              s7 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$e11); }\n            }\n          }\n          if (s7 !== peg$FAILED) {\n            s8 = peg$parse_();\n            s9 = peg$parseOr();\n            if (s9 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s0 = peg$f7(s3, s9);\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseOr() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key = peg$currPos * 31 + 9;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseAnd();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (input.charCodeAt(peg$currPos) === 124) {\n        s3 = peg$c12;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e12); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parse_();\n        s5 = peg$parseOr();\n        if (s5 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f8(s1, s5);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseAnd();\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseAnd() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key = peg$currPos * 31 + 10;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseRelationChain();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (input.charCodeAt(peg$currPos) === 38) {\n        s3 = peg$c13;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e13); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parse_();\n        s5 = peg$parseAnd();\n        if (s5 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f9(s1, s5);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseRelationChain();\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseRelationChain() {\n    var s0, s1, s2, s3;\n\n    var key = peg$currPos * 31 + 11;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parsePlus();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseRelationChainElement();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseRelationChainElement();\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f10(s1, s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsePlus();\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseRelationChainElement() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key = peg$currPos * 31 + 12;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (input.charCodeAt(peg$currPos) === 61) {\n      s2 = peg$c14;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e14); }\n    }\n    if (s2 === peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c15) {\n        s2 = peg$c15;\n        peg$currPos += 2;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e15); }\n      }\n      if (s2 === peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c16) {\n          s2 = peg$c16;\n          peg$currPos += 2;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e16); }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 60) {\n            s2 = peg$c17;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e17); }\n          }\n          if (s2 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 62) {\n              s2 = peg$c18;\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$e18); }\n            }\n          }\n        }\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      s4 = peg$parsePlus();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parse_();\n        peg$savedPos = s0;\n        s0 = peg$f11(s2, s4);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsePlus() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key = peg$currPos * 31 + 13;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseMinus();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (input.charCodeAt(peg$currPos) === 43) {\n        s3 = peg$c19;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e19); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parse_();\n        s5 = peg$parsePlus();\n        if (s5 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f12(s1, s5);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseMinus();\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseMinusItem() {\n    var s0, s1, s2, s3, s4;\n\n    var key = peg$currPos * 31 + 14;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (input.charCodeAt(peg$currPos) === 45) {\n      s2 = peg$c20;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e20); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      s4 = peg$parseTimes();\n      if (s4 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f13(s4);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseMinus() {\n    var s0, s1, s2, s3;\n\n    var key = peg$currPos * 31 + 15;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseTimes();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseNegate();\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseMinusItem();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseMinusItem();\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f14(s1, s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseNegate();\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseNegate() {\n    var s0, s1, s2, s3, s4;\n\n    var key = peg$currPos * 31 + 16;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (input.charCodeAt(peg$currPos) === 45) {\n      s2 = peg$c20;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e20); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      s4 = peg$parseNegate();\n      if (s4 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f15(s4);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseTimes();\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseTimes() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key = peg$currPos * 31 + 17;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseDivided();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (input.charCodeAt(peg$currPos) === 42) {\n        s3 = peg$c21;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e21); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parse_();\n        s5 = peg$parseTimes();\n        if (s5 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f16(s1, s5);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseDivided();\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseDividedItem() {\n    var s0, s1, s2, s3, s4;\n\n    var key = peg$currPos * 31 + 18;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (input.charCodeAt(peg$currPos) === 47) {\n      s2 = peg$c22;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e22); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      s4 = peg$parsePower();\n      if (s4 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f13(s4);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseDivided() {\n    var s0, s1, s2, s3;\n\n    var key = peg$currPos * 31 + 19;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parsePower();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseDividedItem();\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parseDividedItem();\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f17(s1, s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsePower();\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parsePower() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key = peg$currPos * 31 + 20;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseValue();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (input.charCodeAt(peg$currPos) === 94) {\n        s3 = peg$c23;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e23); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parse_();\n        s5 = peg$parseValue();\n        if (s5 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f18(s1, s5);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseValue();\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseValue() {\n    var s0;\n\n    var key = peg$currPos * 31 + 21;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$parseBoolean();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseFunctionCall();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseSymbol();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseNumber();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseVector();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseDefineLambdaFunction();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parseSubExpression();\n              }\n            }\n          }\n        }\n      }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseSubExpression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key = peg$currPos * 31 + 22;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c8;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e8); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      s3 = peg$parseOr();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parse_();\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s5 = peg$c9;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e9); }\n        }\n        if (s5 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f19(s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseListElement() {\n    var s0, s1, s2, s3, s4;\n\n    var key = peg$currPos * 31 + 23;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    if (input.charCodeAt(peg$currPos) === 44) {\n      s2 = peg$c7;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e7); }\n    }\n    if (s2 !== peg$FAILED) {\n      s3 = peg$parse_();\n      s4 = peg$parseOr();\n      if (s4 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f13(s4);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseList() {\n    var s0, s1, s2, s3, s4;\n\n    var key = peg$currPos * 31 + 24;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    s2 = peg$parseOr();\n    if (s2 !== peg$FAILED) {\n      s3 = [];\n      s4 = peg$parseListElement();\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        s4 = peg$parseListElement();\n      }\n      s4 = peg$parse_();\n      peg$savedPos = s0;\n      s0 = peg$f5(s2, s3);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseVector() {\n    var s0, s1, s2, s3;\n\n    var key = peg$currPos * 31 + 25;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c24;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e24); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseList();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (input.charCodeAt(peg$currPos) === 93) {\n        s3 = peg$c25;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e25); }\n      }\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f20(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseFunctionCall() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key = peg$currPos * 31 + 26;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseSymbol();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parseSubExpression();\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s3 = peg$c8;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e8); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parseList();\n        if (s4 === peg$FAILED) {\n          s4 = null;\n        }\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s5 = peg$c9;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e9); }\n        }\n        if (s5 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f21(s1, s4);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseBoolean() {\n    var s0, s1;\n\n    var key = peg$currPos * 31 + 27;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c26) {\n      s1 = peg$c26;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e27); }\n    }\n    if (s1 === peg$FAILED) {\n      if (input.substr(peg$currPos, 5) === peg$c27) {\n        s1 = peg$c27;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e28); }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f22(s1);\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e26); }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseSymbol() {\n    var s0, s1, s2;\n\n    var key = peg$currPos * 31 + 28;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$r0.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e30); }\n    }\n    if (s2 === peg$FAILED) {\n      if (peg$r1.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e31); }\n      }\n      if (s2 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 95) {\n          s2 = peg$c28;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e32); }\n        }\n      }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$r0.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e30); }\n        }\n        if (s2 === peg$FAILED) {\n          if (peg$r1.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e31); }\n          }\n          if (s2 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 95) {\n              s2 = peg$c28;\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$e32); }\n            }\n          }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f23();\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e29); }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parseNumber() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var key = peg$currPos * 31 + 29;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$r2.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e34); }\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        if (peg$r2.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e34); }\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s3 = peg$c29;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e35); }\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = [];\n        if (peg$r2.test(input.charAt(peg$currPos))) {\n          s5 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$e34); }\n        }\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          if (peg$r2.test(input.charAt(peg$currPos))) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$e34); }\n          }\n        }\n        s3 = [s3, s4];\n        s2 = s3;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f24();\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e33); }\n    }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1;\n\n    var key = peg$currPos * 31 + 30;\n    var cached = peg$resultsCache[key];\n\n    if (cached) {\n      peg$currPos = cached.nextPos;\n\n      return cached.result;\n    }\n\n    peg$silentFails++;\n    s0 = [];\n    if (peg$r3.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$e37); }\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      if (peg$r3.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$e37); }\n      }\n    }\n    peg$silentFails--;\n    s1 = peg$FAILED;\n    if (peg$silentFails === 0) { peg$fail(peg$e36); }\n\n    peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n    return s0;\n  }\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse: peg$parse\n};\n"]},"metadata":{},"sourceType":"script"}