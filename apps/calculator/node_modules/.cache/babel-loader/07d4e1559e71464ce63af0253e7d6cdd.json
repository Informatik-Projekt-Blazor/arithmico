{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _NumberNode = _interopRequireDefault(require(\"../../../create/NumberNode\"));\n\nvar _parameterUtils = require(\"../../../utils/parameter-utils\");\n\nvar _pluginBuilder = require(\"../../../utils/plugin-builder\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar rootsPlugin = (0, _pluginBuilder.createPlugin)('statistics');\n(0, _pluginBuilder.addPluginDescription)(rootsPlugin, 'adds erf, normal, cnormal, binco, binom, cbinom functions');\n(0, _pluginBuilder.addPluginAuthor)(rootsPlugin, 'core');\nvar sqrtHeader = [{\n  name: 'x',\n  type: 'number',\n  evaluate: true\n}];\nvar rootHeader = [{\n  name: 'x',\n  type: 'number',\n  evaluate: true\n}, {\n  name: 'n',\n  type: 'number',\n  evaluate: true\n}];\n(0, _pluginBuilder.addPluginFunction)(rootsPlugin, (0, _pluginBuilder.createPluginFunction)('sqrt', sqrtHeader, 'Calculates the square root of x', 'Berechnet die Quadratwurzel von x.', function (parameters, context) {\n  var parameterStackFrame = (0, _parameterUtils.mapParametersToStackFrame)('sqrt', parameters, sqrtHeader, context);\n  var x = parameterStackFrame['x'].value;\n\n  if (x < 0) {\n    throw 'RuntimeError: sqrt: x < 0';\n  }\n\n  return (0, _NumberNode[\"default\"])(Math.sqrt(x));\n}));\n(0, _pluginBuilder.addPluginFunction)(rootsPlugin, (0, _pluginBuilder.createPluginFunction)('root', rootHeader, 'Computes the nth root of x', 'Berechnet die n-te Wurzel von x.', function (parameters, context) {\n  var parameterStackFrame = (0, _parameterUtils.mapParametersToStackFrame)('root', parameters, rootHeader, context);\n  var x = parameterStackFrame['x'].value;\n  var n = parameterStackFrame['n'].value;\n\n  if (x < 0) {\n    throw 'RuntimeError: root: x < 0';\n  }\n\n  if (n <= 0) {\n    throw 'RuntimeError: root: n <= 0';\n  }\n\n  return (0, _NumberNode[\"default\"])(Math.pow(x, 1 / n));\n}));\nvar _default = rootsPlugin;\nexports[\"default\"] = _default;","map":{"version":3,"mappings":";;;;;;;AAAA;;AAEA;;AACA;;;;;;;;AAQA,IAAMA,WAAW,GAAG,iCAAa,YAAb,CAApB;AACA,yCAAqBA,WAArB,EAAkC,2DAAlC;AACA,oCAAgBA,WAAhB,EAA6B,MAA7B;AAEA,IAAMC,UAAgC,GAAG,CAAC;EAAEC,IAAI,EAAE,GAAR;EAAaC,IAAI,EAAE,QAAnB;EAA6BC,QAAQ,EAAE;AAAvC,CAAD,CAAzC;AACA,IAAMC,UAAgC,GAAG,CACrC;EAAEH,IAAI,EAAE,GAAR;EAAaC,IAAI,EAAE,QAAnB;EAA6BC,QAAQ,EAAE;AAAvC,CADqC,EAErC;EAAEF,IAAI,EAAE,GAAR;EAAaC,IAAI,EAAE,QAAnB;EAA6BC,QAAQ,EAAE;AAAvC,CAFqC,CAAzC;AAKA,sCACIJ,WADJ,EAEI,yCACI,MADJ,EAEIC,UAFJ,EAGI,iCAHJ,EAII,oCAJJ,EAKI,UAACK,UAAD,EAAaC,OAAb,EAAyB;EACrB,IAAMC,mBAAmB,GAAG,+CAA0B,MAA1B,EAAkCF,UAAlC,EAA8CL,UAA9C,EAA0DM,OAA1D,CAA5B;EACA,IAAME,CAAC,GAAgBD,mBAAmB,CAAC,GAAD,CAAnBA,CAA0BE,KAAjD;;EAEA,IAAID,CAAC,GAAG,CAAR,EAAW;IACP,MAAM,2BAAN;EACH;;EAED,OAAO,4BAAiBE,IAAI,CAACC,IAALD,CAAUF,CAAVE,CAAjB,CAAP;AAbR,EAFJ;AAoBA,sCACIX,WADJ,EAEI,yCACI,MADJ,EAEIK,UAFJ,EAGI,4BAHJ,EAII,kCAJJ,EAKI,UAACC,UAAD,EAAaC,OAAb,EAAyB;EACrB,IAAMC,mBAAmB,GAAG,+CAA0B,MAA1B,EAAkCF,UAAlC,EAA8CD,UAA9C,EAA0DE,OAA1D,CAA5B;EACA,IAAME,CAAC,GAAgBD,mBAAmB,CAAC,GAAD,CAAnBA,CAA0BE,KAAjD;EACA,IAAMG,CAAC,GAAgBL,mBAAmB,CAAC,GAAD,CAAnBA,CAA0BE,KAAjD;;EAEA,IAAID,CAAC,GAAG,CAAR,EAAW;IACP,MAAM,2BAAN;EACH;;EAED,IAAII,CAAC,IAAI,CAAT,EAAY;IACR,MAAM,4BAAN;EACH;;EAED,OAAO,4BAAiBF,IAAI,CAACG,GAALH,CAASF,CAATE,EAAY,IAAIE,CAAhBF,CAAjB,CAAP;AAlBR,EAFJ;eAyBeX","names":["rootsPlugin","sqrtHeader","name","type","evaluate","rootHeader","parameters","context","parameterStackFrame","x","value","Math","sqrt","n","pow"],"sources":["/home/behrenle/Projects/private/arithmico-calculator/node_modules/@behrenle/number-cruncher/src/plugins/core/roots/roots.ts"],"sourcesContent":["import createNumberNode from '../../../create/NumberNode';\nimport { FunctionHeaderItem, NumberNode } from '../../../types/SyntaxTreeNodes';\nimport { mapParametersToStackFrame } from '../../../utils/parameter-utils';\nimport {\n    addPluginAuthor,\n    addPluginDescription,\n    addPluginFunction,\n    createPlugin,\n    createPluginFunction,\n} from '../../../utils/plugin-builder';\n\nconst rootsPlugin = createPlugin('statistics');\naddPluginDescription(rootsPlugin, 'adds erf, normal, cnormal, binco, binom, cbinom functions');\naddPluginAuthor(rootsPlugin, 'core');\n\nconst sqrtHeader: FunctionHeaderItem[] = [{ name: 'x', type: 'number', evaluate: true }];\nconst rootHeader: FunctionHeaderItem[] = [\n    { name: 'x', type: 'number', evaluate: true },\n    { name: 'n', type: 'number', evaluate: true },\n];\n\naddPluginFunction(\n    rootsPlugin,\n    createPluginFunction(\n        'sqrt',\n        sqrtHeader,\n        'Calculates the square root of x',\n        'Berechnet die Quadratwurzel von x.',\n        (parameters, context) => {\n            const parameterStackFrame = mapParametersToStackFrame('sqrt', parameters, sqrtHeader, context);\n            const x = (<NumberNode>parameterStackFrame['x']).value;\n\n            if (x < 0) {\n                throw 'RuntimeError: sqrt: x < 0';\n            }\n\n            return createNumberNode(Math.sqrt(x));\n        },\n    ),\n);\n\naddPluginFunction(\n    rootsPlugin,\n    createPluginFunction(\n        'root',\n        rootHeader,\n        'Computes the nth root of x',\n        'Berechnet die n-te Wurzel von x.',\n        (parameters, context) => {\n            const parameterStackFrame = mapParametersToStackFrame('root', parameters, rootHeader, context);\n            const x = (<NumberNode>parameterStackFrame['x']).value;\n            const n = (<NumberNode>parameterStackFrame['n']).value;\n\n            if (x < 0) {\n                throw 'RuntimeError: root: x < 0';\n            }\n\n            if (n <= 0) {\n                throw 'RuntimeError: root: n <= 0';\n            }\n\n            return createNumberNode(Math.pow(x, 1 / n));\n        },\n    ),\n);\n\nexport default rootsPlugin;\n"]},"metadata":{},"sourceType":"script"}