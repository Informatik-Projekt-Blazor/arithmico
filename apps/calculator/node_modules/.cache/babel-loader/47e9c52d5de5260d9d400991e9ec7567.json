{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport evaluate, { init, getDefaultContext } from '@behrenle/number-cruncher';\nimport create from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport { createOptions } from '@behrenle/number-cruncher/lib/utils/context-utils';\ninit();\nconst defaultSettings = {\n  decimalPlaces: getDefaultContext().options.decimalPlaces,\n  interfaceFontSize: 'medium',\n  theme: 'light',\n  language: 'de',\n  numberFormat: 'default',\n  excludeInfoInProtocol: true,\n  copySynopsisOnClick: true,\n  angleUnit: 'degrees',\n  boldFont: false\n};\nconst defaultSession = {\n  input: '',\n  historyIndex: 0,\n  outputResetted: false,\n  protocol: [],\n  stack: getDefaultContext().stack\n};\n\nfunction getDecimalSeparator(language, numberFormat) {\n  if (numberFormat === 'default') {\n    if (language === 'de') {\n      return ',';\n    }\n\n    return '.';\n  } else {\n    if (numberFormat === 'de') {\n      return ',';\n    }\n\n    return '.';\n  }\n}\n\nexport function setSessionAttribute(set, partialSession) {\n  return set(state => ({ ...state,\n    session: { ...state.session,\n      ...partialSession\n    }\n  }));\n}\nexport function setSettingsAttribute(set, partialSettings) {\n  return set(state => ({ ...state,\n    settings: { ...state.settings,\n      ...partialSettings\n    }\n  }));\n}\nconst useSessionStore = create(persist(set => ({\n  settings: defaultSettings,\n  session: defaultSession,\n  dispatch: action => {\n    switch (action.type) {\n      case 'setLanguage':\n        setSettingsAttribute(set, {\n          language: action.language\n        });\n        break;\n\n      case 'setNumberFormat':\n        setSettingsAttribute(set, {\n          numberFormat: action.numberFormat\n        });\n        break;\n\n      case 'setInterfaceFontSize':\n        setSettingsAttribute(set, {\n          interfaceFontSize: action.interfaceFontSize\n        });\n        break;\n\n      case 'setExcludeInfoInProtocol':\n        setSettingsAttribute(set, {\n          excludeInfoInProtocol: action.excludeInfoInProtocol\n        });\n        break;\n\n      case 'setCopySynopsisOnClick':\n        setSettingsAttribute(set, {\n          copySynopsisOnClick: action.copySynopsisOnClick\n        });\n        break;\n\n      case 'setAngleUnit':\n        setSettingsAttribute(set, {\n          angleUnit: action.angleUnit\n        });\n        break;\n\n      case 'setBoldFont':\n        setSettingsAttribute(set, {\n          boldFont: action.boldFont\n        });\n        break;\n\n      case 'setTheme':\n        setSettingsAttribute(set, {\n          theme: action.theme\n        });\n        break;\n\n      case 'setDecimalPlaces':\n        setSettingsAttribute(set, {\n          decimalPlaces: action.decimalPlaces\n        });\n        break;\n\n      case 'resetSettings':\n        set(state => ({ ...state,\n          settings: defaultSettings\n        }));\n        break;\n\n      case 'setInput':\n        setSessionAttribute(set, {\n          input: action.input\n        });\n        break;\n\n      case 'resetInput':\n        setSessionAttribute(set, {\n          input: ''\n        });\n        break;\n\n      case 'evaluate':\n        set(state => {\n          if (state.session.input === '') return state;\n          const newIndex = state.session.protocol.filter(item => item.type === 'math').length;\n\n          try {\n            const result = evaluate(state.session.input, {\n              stack: state.session.stack,\n              options: createOptions({\n                decimalSeparator: getDecimalSeparator(state.settings.language, state.settings.numberFormat),\n                magnitudeThresholdForScientificNotation: state.settings.decimalPlaces,\n                decimalPlaces: state.settings.decimalPlaces,\n                angleUnit: state.settings.angleUnit\n              })\n            });\n            return { ...state,\n              session: { ...state.session,\n                historyIndex: newIndex,\n                outputResetted: false,\n                protocol: [...state.session.protocol, {\n                  type: 'math',\n                  error: false,\n                  input: state.session.input,\n                  output: result.result\n                }],\n                stack: result.context.stack\n              }\n            };\n          } catch (error) {\n            return { ...state,\n              session: { ...state.session,\n                historyIndex: newIndex,\n                outputResetted: false,\n                protocol: [...state.session.protocol, {\n                  type: 'math',\n                  error: true,\n                  input: state.session.input,\n                  output: error\n                }]\n              }\n            };\n          }\n        });\n        break;\n\n      case 'goBackInInputHistory':\n        set(state => {\n          const mathItems = state.session.protocol.filter(item => item.type === 'math');\n          const newIndex = state.session.historyIndex - 1;\n\n          if (newIndex < 0) {\n            return state;\n          }\n\n          return { ...state,\n            session: { ...state.session,\n              historyIndex: newIndex,\n              input: mathItems[newIndex].input\n            }\n          };\n        });\n        break;\n\n      case 'goForwardInInputHistory':\n        set(state => {\n          const mathItems = state.session.protocol.filter(item => item.type === 'math');\n          const newIndex = state.session.historyIndex + 1;\n\n          if (newIndex > mathItems.length) {\n            return state;\n          }\n\n          return { ...state,\n            session: { ...state.session,\n              historyIndex: newIndex,\n              input: newIndex === mathItems.length ? '' : mathItems[newIndex].input\n            }\n          };\n        });\n        break;\n\n      case 'resetDefinitions':\n        set(state => {\n          return { ...state,\n            session: { ...state.session,\n              stack: getDefaultContext().stack,\n              protocol: [...state.session.protocol, {\n                type: 'info',\n                info: 'reset definitions'\n              }]\n            }\n          };\n        });\n        break;\n\n      case 'resetOutput':\n        setSessionAttribute(set, {\n          outputResetted: true\n        });\n        break;\n\n      case 'resetProtocol':\n        setSessionAttribute(set, {\n          protocol: []\n        });\n        break;\n    }\n  }\n}), {\n  name: 'settings',\n  version: 4,\n  partialize: state => ({\n    settings: state.settings\n  })\n}));\nexport function useDispatch() {\n  _s();\n\n  return useSessionStore(state => state.dispatch);\n}\n\n_s(useDispatch, \"eKckxYxtdl0uP+snTDP8iqT0o8Y=\", false, function () {\n  return [useSessionStore];\n});\n\nexport default useSessionStore;","map":{"version":3,"names":["evaluate","init","getDefaultContext","create","persist","createOptions","defaultSettings","decimalPlaces","options","interfaceFontSize","theme","language","numberFormat","excludeInfoInProtocol","copySynopsisOnClick","angleUnit","boldFont","defaultSession","input","historyIndex","outputResetted","protocol","stack","getDecimalSeparator","setSessionAttribute","set","partialSession","state","session","setSettingsAttribute","partialSettings","settings","useSessionStore","dispatch","action","type","newIndex","filter","item","length","result","decimalSeparator","magnitudeThresholdForScientificNotation","error","output","context","mathItems","info","name","version","partialize","useDispatch"],"sources":["/home/behrenle/Projects/private/arithmico-calculator/apps/calculator/src/stores/session-store/use-session-store.ts"],"sourcesContent":["import evaluate, { init, getDefaultContext } from '@behrenle/number-cruncher';\nimport create, { SetState } from 'zustand';\nimport { persist } from 'zustand/middleware';\nimport { MathItem, Session, SessionState, Settings } from './types';\nimport { createOptions } from '@behrenle/number-cruncher/lib/utils/context-utils';\nimport { Options } from '@behrenle/number-cruncher/lib/types';\n\ninit();\n\nconst defaultSettings: Settings = {\n  decimalPlaces: getDefaultContext().options.decimalPlaces,\n  interfaceFontSize: 'medium',\n  theme: 'light',\n  language: 'de',\n  numberFormat: 'default',\n  excludeInfoInProtocol: true as boolean,\n  copySynopsisOnClick: true as boolean,\n  angleUnit: 'degrees',\n  boldFont: false as boolean\n};\n\nconst defaultSession: Session = {\n  input: '',\n  historyIndex: 0,\n  outputResetted: false,\n  protocol: [],\n  stack: getDefaultContext().stack\n};\n\nfunction getDecimalSeparator(language: string, numberFormat: string) {\n  if (numberFormat === 'default') {\n    if (language === 'de') {\n      return ',';\n    }\n    return '.';\n  } else {\n    if (numberFormat === 'de') {\n      return ',';\n    }\n    return '.';\n  }\n}\n\nexport function setSessionAttribute(set: SetState<SessionState>, partialSession: Partial<Session>) {\n  return set((state) => ({ ...state, session: { ...state.session, ...partialSession } }));\n}\n\nexport function setSettingsAttribute(\n  set: SetState<SessionState>,\n  partialSettings: Partial<Settings>\n) {\n  return set((state) => ({ ...state, settings: { ...state.settings, ...partialSettings } }));\n}\n\nconst useSessionStore = create<SessionState>(\n  persist(\n    (set) => ({\n      settings: defaultSettings,\n      session: defaultSession,\n      dispatch: (action) => {\n        switch (action.type) {\n          case 'setLanguage':\n            setSettingsAttribute(set, { language: action.language });\n            break;\n\n          case 'setNumberFormat':\n            setSettingsAttribute(set, { numberFormat: action.numberFormat });\n            break;\n\n          case 'setInterfaceFontSize':\n            setSettingsAttribute(set, { interfaceFontSize: action.interfaceFontSize });\n            break;\n\n          case 'setExcludeInfoInProtocol':\n            setSettingsAttribute(set, { excludeInfoInProtocol: action.excludeInfoInProtocol });\n            break;\n\n          case 'setCopySynopsisOnClick':\n            setSettingsAttribute(set, { copySynopsisOnClick: action.copySynopsisOnClick });\n            break;\n\n          case 'setAngleUnit':\n            setSettingsAttribute(set, { angleUnit: action.angleUnit });\n            break;\n\n          case 'setBoldFont':\n            setSettingsAttribute(set, { boldFont: action.boldFont });\n            break;\n\n          case 'setTheme':\n            setSettingsAttribute(set, { theme: action.theme });\n            break;\n\n          case 'setDecimalPlaces':\n            setSettingsAttribute(set, { decimalPlaces: action.decimalPlaces });\n            break;\n\n          case 'resetSettings':\n            set((state) => ({ ...state, settings: defaultSettings }));\n            break;\n\n          case 'setInput':\n            setSessionAttribute(set, { input: action.input });\n            break;\n\n          case 'resetInput':\n            setSessionAttribute(set, { input: '' });\n            break;\n\n          case 'evaluate':\n            set((state) => {\n              if (state.session.input === '') return state;\n\n              const newIndex = state.session.protocol.filter((item) => item.type === 'math').length;\n\n              try {\n                const result = evaluate(state.session.input, {\n                  stack: state.session.stack,\n                  options: createOptions({\n                    decimalSeparator: getDecimalSeparator(\n                      state.settings.language,\n                      state.settings.numberFormat\n                    ),\n                    magnitudeThresholdForScientificNotation: state.settings.decimalPlaces,\n                    decimalPlaces: state.settings.decimalPlaces,\n                    angleUnit: state.settings.angleUnit as Options['angleUnit']\n                  })\n                });\n\n                return {\n                  ...state,\n                  session: {\n                    ...state.session,\n                    historyIndex: newIndex,\n                    outputResetted: false,\n                    protocol: [\n                      ...state.session.protocol,\n                      {\n                        type: 'math',\n                        error: false,\n                        input: state.session.input,\n                        output: result.result\n                      }\n                    ],\n                    stack: result.context.stack\n                  }\n                };\n              } catch (error) {\n                return {\n                  ...state,\n                  session: {\n                    ...state.session,\n                    historyIndex: newIndex,\n                    outputResetted: false,\n                    protocol: [\n                      ...state.session.protocol,\n                      {\n                        type: 'math',\n                        error: true,\n                        input: state.session.input,\n                        output: error as string\n                      }\n                    ]\n                  }\n                };\n              }\n            });\n            break;\n\n          case 'goBackInInputHistory':\n            set((state) => {\n              const mathItems = <MathItem[]>(\n                state.session.protocol.filter((item) => item.type === 'math')\n              );\n              const newIndex = state.session.historyIndex - 1;\n              if (newIndex < 0) {\n                return state;\n              }\n\n              return {\n                ...state,\n                session: {\n                  ...state.session,\n                  historyIndex: newIndex,\n                  input: mathItems[newIndex].input\n                }\n              };\n            });\n            break;\n\n          case 'goForwardInInputHistory':\n            set((state) => {\n              const mathItems = <MathItem[]>(\n                state.session.protocol.filter((item) => item.type === 'math')\n              );\n              const newIndex = state.session.historyIndex + 1;\n              if (newIndex > mathItems.length) {\n                return state;\n              }\n\n              return {\n                ...state,\n                session: {\n                  ...state.session,\n                  historyIndex: newIndex,\n                  input: newIndex === mathItems.length ? '' : mathItems[newIndex].input\n                }\n              };\n            });\n            break;\n\n          case 'resetDefinitions':\n            set((state) => {\n              return {\n                ...state,\n                session: {\n                  ...state.session,\n                  stack: getDefaultContext().stack,\n                  protocol: [...state.session.protocol, { type: 'info', info: 'reset definitions' }]\n                }\n              };\n            });\n            break;\n\n          case 'resetOutput':\n            setSessionAttribute(set, { outputResetted: true });\n            break;\n\n          case 'resetProtocol':\n            setSessionAttribute(set, { protocol: [] });\n            break;\n        }\n      }\n    }),\n    {\n      name: 'settings',\n      version: 4,\n      partialize: (state) => ({\n        settings: state.settings\n      })\n    }\n  )\n);\n\nexport function useDispatch() {\n  return useSessionStore((state) => state.dispatch);\n}\n\nexport default useSessionStore;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}